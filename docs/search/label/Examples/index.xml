<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Examples on FOSS Trading</title>
    <link>https://blog.fosstrading.com/search/label/Examples.html</link>
    <description>Recent content in Examples on FOSS Trading</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Mar 2014 12:25:00 -0500</lastBuildDate>
    
	<atom:link href="https://blog.fosstrading.com/search/label/Examples/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to PortfolioAnalytics</title>
      <link>https://blog.fosstrading.com/2014/03/intro-to-portfolioanalytics.html</link>
      <pubDate>Sat, 29 Mar 2014 12:25:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2014/03/intro-to-portfolioanalytics.html</guid>
      <description>This is a guest post by Ross Bennett. Ross is currently enrolled in the University of Washington Master of Science in Computational Finance &amp;amp; Risk Management program with an expected graduation date of December 2014. He worked on the PortfolioAnalytics package as part of the Google Summer of Code 2013 project and continues to work on the package as a Research Assistant at the University of Washington.
His work on the package focused on implementing a portfolio specification to separate and modularize assets, constraints, and objectives.</description>
    </item>
    
    <item>
      <title>Tactical asset allocation using quantstrat</title>
      <link>https://blog.fosstrading.com/2011/08/tactical-asset-allocation-using.html</link>
      <pubDate>Tue, 23 Aug 2011 20:55:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/08/tactical-asset-allocation-using.html</guid>
      <description>As promised in the introduction to quantstrat, here is an example strategy. I thought I&amp;rsquo;d start with the obligatory tactical asset allocation (TAA) strategy. This post will replicate the strategy in the post, tactical asset allocation using blotter.
The &amp;ldquo;faber&amp;rdquo; demo in the quanstrat package contains a TAA strategy but it uses a slightly different approach than the code we&amp;rsquo;re trying to replicate. There are two major differences:
  The blotter TAA code initiates a position at the first observation where the close is above the SMA.</description>
    </item>
    
    <item>
      <title>Timely Portfolio: LSPM Examples</title>
      <link>https://blog.fosstrading.com/2011/05/timely-portfolio-lspm-examples.html</link>
      <pubDate>Sun, 01 May 2011 13:38:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/05/timely-portfolio-lspm-examples.html</guid>
      <description>Timely Portfolio has been doing some interesting work with Ralph Vince&amp;rsquo;s Leverage Space Model via the LSPM R package. Here&amp;rsquo;s a short list of his most recent LSPM-related posts:
 The Leverage Space Trading Model Bond Market as a Casino Game Part 1 Bond Market as a Casino Game Part 2 Slightly Different Use of Ralph Vince’s Leverage Space Trading Model Another Use of LSPM in Tactical Portfolio Allocation  I encourage those of you who are interested in LSPM and/or R to check out his blog.</description>
    </item>
    
    <item>
      <title>How to backtest a strategy in R</title>
      <link>https://blog.fosstrading.com/2011/03/how-to-backtest-strategy-in-r.html</link>
      <pubDate>Sat, 26 Mar 2011 09:54:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/03/how-to-backtest-strategy-in-r.html</guid>
      <description>This is the third post in the Backtesting in Excel and R series and it will show how to backtest a simple strategy in R. It will follow the 4 steps Damian outlined in his post on how to backtest a simple strategy in Excel.
Step 1: Get the data
The getSymbols function in quantmod makes this step easy if you can use daily data from Yahoo Finance. There are also &amp;ldquo;methods&amp;rdquo; (not in the strict sense) to pull data from other sources (FRED, Google, Oanda, R save files, databases, etc.</description>
    </item>
    
    <item>
      <title>How to backtest a strategy in Excel</title>
      <link>https://blog.fosstrading.com/2011/03/how-to-backtest-strategy-in-excel.html</link>
      <pubDate>Mon, 14 Mar 2011 20:57:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/03/how-to-backtest-strategy-in-excel.html</guid>
      <description>(This is a guest post by Damian from Skill Analytics and ETF Prophet)
Let me start by saying that I’m not an expert in backtesting in Excel – there are a load of very smart bloggers out there that have, as I would say, “mad skillz” at working with Excel including (but not limited to) Michael Stokes over at marketsci.com, Jeff Pietch over at etfprophet.com and the folks (David and Corey) over at cssanalytics.</description>
    </item>
    
    <item>
      <title>Backtesting in Excel and R</title>
      <link>https://blog.fosstrading.com/2011/02/backtesting-in-excel-and-r.html</link>
      <pubDate>Thu, 17 Feb 2011 18:53:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/02/backtesting-in-excel-and-r.html</guid>
      <description>This post is the introduction to a series that will illustrate how to backtest the same strategy in Excel and R. The impetus for this series started with this tweet by Jared Woodard at Condor Options. After Soren Macbeth introduced us, Jared suggested backtesting a simple DVI strategy in Excel and R.
The three-post series will show you:
 Resources that make it easier to move from Excel to R How to test DVI in Excel How to test DVI in R  Since I know next to nothing about testing strategies in Excel, I will be writing posts 1 and 3.</description>
    </item>
    
    <item>
      <title>Margin Constraints with LSPM</title>
      <link>https://blog.fosstrading.com/2010/08/margin-constraints-with-lspm.html</link>
      <pubDate>Sun, 01 Aug 2010 23:31:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2010/08/margin-constraints-with-lspm.html</guid>
      <description>When optimizing leverage space portfolios, I frequently run into the issue of one or more f$ ([Max Loss]/f) being less than the margin of its respective instrument. For example, assume the required margin for an instrument is $500, f$ is $100, and $100,000 in equity. The optimal amount to trade is 1,000 shares ($100,000/$100). However, that would require $500,000 in equity, while you only have $100,000. What do you do?</description>
    </item>
    
    <item>
      <title>LSPM Joint Probability Tables</title>
      <link>https://blog.fosstrading.com/2010/05/lspm-joint-probability-tables.html</link>
      <pubDate>Tue, 18 May 2010 22:30:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2010/05/lspm-joint-probability-tables.html</guid>
      <description>I&amp;rsquo;ve received several requests for methods to create joint probability tables for use in LSPM&amp;rsquo;s portfolio optimization functions. Rather than continue to email this example to individuals who ask, I post it here in hopes they find it via a Google search. ;-)
I&amp;rsquo;m certain there are more robust ways to estimate this table, but the code below is a start&amp;hellip;
# `x` is a matrix of market system returns # `n` is the number of bins to create for each system # `FUN` is the function to use to calculate the value for each bin # `.</description>
    </item>
    
    <item>
      <title>Maximum Probability of Profit</title>
      <link>https://blog.fosstrading.com/2010/04/maximum-probability-of-profit.html</link>
      <pubDate>Fri, 09 Apr 2010 10:04:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2010/04/maximum-probability-of-profit.html</guid>
      <description>To continue with the LSPM examples, this post shows how to optimize a Leverage Space Portfolio for the maximum probability of profit. The data and example are again taken from The Leverage Space Trading Model by Ralph Vince.
These optimizations take a very long time. 100 iterations on a 10-core Amazon EC2 cluster took 21 hours. Again, the results will not necessarily match the book because of differences between DEoptim and Ralph&amp;rsquo;s genetic algorithm and because there are multiple possible paths one can take through leverage space that will achieve similar results.</description>
    </item>
    
    <item>
      <title>LSPM with snow</title>
      <link>https://blog.fosstrading.com/2010/01/lspm-with-snow.html</link>
      <pubDate>Sun, 10 Jan 2010 17:01:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2010/01/lspm-with-snow.html</guid>
      <description>My last post provided examples of how to use the LSPM package. Those who experimented with the code have probably found that constrained optimizations with horizon &amp;gt; 6 have long run-times (when calc.max &amp;gt;= horizon).
This post will illustrate how the snow package can increase the speed of the probDrawdown() and probRuin() functions on computers with multiple cores. This yields nearly linear improvements in run-times relative to the number of cores.</description>
    </item>
    
    <item>
      <title>LSPM Examples</title>
      <link>https://blog.fosstrading.com/2010/01/lspm-examples.html</link>
      <pubDate>Sat, 02 Jan 2010 15:35:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2010/01/lspm-examples.html</guid>
      <description>I have received several requests for additional LSPM documentation over the past couple days and a couple months ago I promised an introduction to LSPM.
In this long-overdue post, I will show how to optimize a Leverage Space Portfolio with the LSPM package. Please use the comments to let me know what you would like to see next.
Some copious notes before we get to the code:
These examples are based on revision 26 31 from r-forge and will not work under earlier revisions (and may not work with later revisions).</description>
    </item>
    
    <item>
      <title>RSI(2) Evaluation</title>
      <link>https://blog.fosstrading.com/2009/06/rsi2-evaluation.html</link>
      <pubDate>Sun, 28 Jun 2009 22:02:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/06/rsi2-evaluation.html</guid>
      <description>This post continues the series of investigating the RSI(2) strategy. The first post replicated this simple RSI(2) strategy from the MarketSci Blog using R. The second post showed how to replicate the strategy that scales in/out of RSI(2).
If you like the RSI(2), be sure to check out David Varadi&amp;rsquo;s RSI(2) alternative!
This post will use the PerformanceAnalytics package to evaluate the rules that scale in/out of positions. I&amp;rsquo;ve also provided a simple function that provides some summary statistics.</description>
    </item>
    
    <item>
      <title>Packages featured with Inference for R</title>
      <link>https://blog.fosstrading.com/2009/05/packages-featured-with-inference-for-r.html</link>
      <pubDate>Tue, 12 May 2009 09:22:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/05/packages-featured-with-inference-for-r.html</guid>
      <description>quantmod, TTR, and xts were (not so) recently featured on the Inference for R Blog. Inference for R is a Integrated Development Environment (IDE) designed specifically for R.
The post gives an example of how to easily perform advanced financial stock analysis using Inference in Excel.
I appreciate how they&amp;rsquo;re making R more accessible to a general audience, even though I like a command line interface and my preferred development environment is vim.</description>
    </item>
    
    <item>
      <title>RSI(2) with Position Sizing</title>
      <link>https://blog.fosstrading.com/2009/05/rsi2-with-position-sizing.html</link>
      <pubDate>Fri, 01 May 2009 20:58:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/05/rsi2-with-position-sizing.html</guid>
      <description>Though it&amp;rsquo;s more than two weeks later, here&amp;rsquo;s the second post in the series that will demonstrate how to build, test, and implement a trading strategy with R. You can find the first post here.
The first post replicated this simple RSI(2) strategy from the MarketSci Blog. This second post will demonstrate how to replicate this strategy that scales in/out of RSI(2).
A couple notes before moving to the code:</description>
    </item>
    
    <item>
      <title>Testing RSI(2) with R, First Steps</title>
      <link>https://blog.fosstrading.com/2009/04/testing-rsi2-with-r.html</link>
      <pubDate>Mon, 13 Apr 2009 22:35:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/04/testing-rsi2-with-r.html</guid>
      <description>This is the first of a series of posts that will demonstrate how to build, test, and implement a trading strategy using my favorite FOSS, R. I chose the RSI(2) strategy because it has gotten considerable attention on trading blogs over the past 6 months.
In particular, I will be replicating and extending some of the results from Michael Stokes&amp;rsquo; excellent MarketSci Blog. This post will focus on replicating this simple RSI(2) strategy.</description>
    </item>
    
  </channel>
</rss>