<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on FOSS Trading</title>
    <link>https://blog.fosstrading.com/search/label/Data.html</link>
    <description>Recent content in Data on FOSS Trading</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Jul 2011 22:16:00 -0500</lastBuildDate><atom:link href="https://blog.fosstrading.com/search/label/Data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating Financial Instrument metadata in R</title>
      <link>https://blog.fosstrading.com/2011/07/creating-financial-instrument-metadata.html</link>
      <pubDate>Wed, 27 Jul 2011 22:16:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/07/creating-financial-instrument-metadata.html</guid>
      <description>This is a guest post by Ilya Kipnis. He blogs at QuantStrat TradeR.
When trading stocks in a single currency, instrument metadata can be safely ignored because the multiplier is 1 and the currencies are all the same. When doing analysis on fixed income products, options, futures, or other complex derivative instruments, the data defining the properties of these instruments becomes critical to tasks like accounting for value of trades, or comparing notional value between more than one instrument.</description>
      <content>&lt;p&gt;This is a guest post by &lt;a href=&#34;https://quantstrattrader.wordpress.com/about/&#34;&gt;Ilya Kipnis&lt;/a&gt;. He blogs at &lt;a href=&#34;https://quantstrattrader.wordpress.com&#34;&gt;QuantStrat TradeR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When trading stocks in a single currency, instrument &lt;a href=&#34;http://en.wikipedia.org/wiki/Metadata&#34;&gt;metadata&lt;/a&gt; can be safely ignored because the multiplier is 1 and the currencies are all the same.  When doing analysis on fixed income products, options, futures, or other complex derivative instruments, the data defining the properties of these instruments becomes critical to tasks like accounting for value of trades, or comparing notional value between more than one instrument. The &lt;a href=&#34;http://r-forge.r-project.org/R/?group_id=316&#34;&gt;FinancialInstrument&lt;/a&gt; package provides a construct for storing metadata for tradeable contracts (referred to as instruments, e.g. stocks, futures, options, etc.) and their root representations.  It can be used to create any asset class and complex derivatives, across multiple currencies. &lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;http://blog.fosstrading.com/2009/11/tactical-asset-allocation-using-blotter.html&#34;&gt;tactical asset allocation using blotter&lt;/a&gt;, Joshua Ulrich used FinancialInstrument (blotter depends on it) to create a stock portfolio.  FinancialInstrument is also a required dependency of the quantstrat quantitative strategy framework in R (quantstrat will be covered in a later post).&lt;/p&gt;
&lt;p&gt;Creating a list of historical symbols is a recurring challenge with historical data on derivative instruments.  These symbols tend to follow a deterministic pattern and FinancialInstrument provides utility functions to create the symbols traded over specific periods of time. These symbols could then be used to request historical data from a data vendor or to construct instrument objects in R.&lt;/p&gt;
&lt;p&gt;The simplest function for generating a series of symbols is &lt;code&gt;build_series_symbols()&lt;/code&gt;.  Let&amp;rsquo;s look at it with a small example using crude oil (CL) and STOXX (STXE) futures:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# install.packages(&amp;#34;FinancialInstrument&amp;#34;, repos=&amp;#34;http://R-Forge.R-project.org&amp;#34;)  &lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FinancialInstrument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;primary_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;month_cycle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;F,G,H,J,K,M,N,Q,U,V,X,Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;primary_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;STXE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;month_cycle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;H,M,U,Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  
&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;##   primary_id               month_cycle  &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## 1         CL   F,G,H,J,K,M,N,Q,U,V,X,Z  &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## 2       STXE                   H,M,U,Z  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;Data&lt;/code&gt; object contains two columns.  The &lt;code&gt;primary_id&lt;/code&gt; is the root contract that identifies the instrument, and the &lt;code&gt;month_cycle&lt;/code&gt; defines the months the contracts trade in (e.g. &amp;ldquo;H,M,U,Z&amp;rdquo; for Mar/Jun/Sep/Dec).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;build_series_symbols()&lt;/code&gt; only needs &lt;code&gt;Data&lt;/code&gt; and &lt;code&gt;yearlist&lt;/code&gt;. &lt;code&gt;yearlist&lt;/code&gt; is the suffix for expiration years and 0, 1, 2 represent 2010, 2011, 2012 in this example.  &lt;code&gt;build_series_symbols()&lt;/code&gt; returns a vector of series symbols that we could use to request data or create &lt;code&gt;future_series&lt;/code&gt; instruments.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;nf&#34;&gt;build_series_symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;yearlist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;CLF0&amp;#34;   &amp;#34;CLG0&amp;#34;   &amp;#34;CLH0&amp;#34;   &amp;#34;CLJ0&amp;#34;   &amp;#34;CLK0&amp;#34;   &amp;#34;CLM0&amp;#34;   &amp;#34;CLN0&amp;#34;   &amp;#34;CLQ0&amp;#34;   &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## [9] &amp;#34;CLU0&amp;#34;   &amp;#34;CLV0&amp;#34;   &amp;#34;CLX0&amp;#34;   &amp;#34;CLZ0&amp;#34;   &amp;#34;STXEH0&amp;#34; &amp;#34;STXEM0&amp;#34; &amp;#34;STXEU0&amp;#34; &amp;#34;STXEZ0&amp;#34;  &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## [17] &amp;#34;CLF1&amp;#34;   &amp;#34;CLG1&amp;#34;   &amp;#34;CLH1&amp;#34;   &amp;#34;CLJ1&amp;#34;   &amp;#34;CLK1&amp;#34;   &amp;#34;CLM1&amp;#34;   &amp;#34;CLN1&amp;#34;   &amp;#34;CLQ1&amp;#34;   &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## [25] &amp;#34;CLU1&amp;#34;   &amp;#34;CLV1&amp;#34;   &amp;#34;CLX1&amp;#34;   &amp;#34;CLZ1&amp;#34;   &amp;#34;STXEH1&amp;#34; &amp;#34;STXEM1&amp;#34; &amp;#34;STXEU1&amp;#34; &amp;#34;STXEZ1&amp;#34;  &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## [33] &amp;#34;CLF2&amp;#34;   &amp;#34;CLG2&amp;#34;   &amp;#34;CLH2&amp;#34;   &amp;#34;CLJ2&amp;#34;   &amp;#34;CLK2&amp;#34;   &amp;#34;CLM2&amp;#34;   &amp;#34;CLN2&amp;#34;   &amp;#34;CLQ2&amp;#34;   &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## [41] &amp;#34;CLU2&amp;#34;   &amp;#34;CLV2&amp;#34;   &amp;#34;CLX2&amp;#34;   &amp;#34;CLZ2&amp;#34;   &amp;#34;STXEH2&amp;#34; &amp;#34;STXEM2&amp;#34; &amp;#34;STXEU2&amp;#34; &amp;#34;STXEZ2&amp;#34;  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A more complicated task is to create symbols for exchange guaranteed calendar spreads.  The &lt;code&gt;build_spread_symbols()&lt;/code&gt; function creates a vector of symbols for spreads of securities (currently coded for futures calendar spreads but can be extended and generalized) in a very shorthand notation.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;build_spread_symbols()&lt;/code&gt; accepts instrument specifications via either a file path or (preferably) a data frame (using the file or data arguments, respectively). Output can be assigned to an object or written to a file using the optional &lt;code&gt;outputfile&lt;/code&gt; argument.  The default starting date is the current date, but the user can manually set a starting date (e.g. historical dates for backtesting, and future dates to create lists of instruments to be traded in the future).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# read in data that would be suitable for load.instruments on root contracts  &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# series_data.csv can be downloaded here:&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# https://docs.google.com/leaf?id=0B8wl4QBejPGiMjI2NTQzZjEtZDRkNC00MDRjLWI2ZDgtMzhjOTM5ZGFkYmFk&amp;amp;hl=en_US)&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read.csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;series_data.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringsAsFactors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;# set the type to guaranteed_spread  &lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;guaranteed_spread&amp;#34;&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;# call build_spread_symbols  &lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;build_spread_symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Data[6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2010-01-01&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The critical fields in the data (CSV or data frame) are the &lt;code&gt;primary_id&lt;/code&gt;, the type (e.g. future, calendar spread, inter-commodity spread, etc.), the &lt;code&gt;month_cycle&lt;/code&gt;, and the &lt;code&gt;active_months&lt;/code&gt; (how many contracts to display).  For instance, an &lt;code&gt;active_months&lt;/code&gt; value of 12 on a contract that trades quarterly (&amp;ldquo;H,M,U,Z&amp;rdquo;) would create front month contracts for the next 3 years.  An &lt;code&gt;active_months&lt;/code&gt; value of 6 on this same quarterly contract would produce 1.5 years.  On a contract that trades 12 months a year (&amp;ldquo;F,G,H,J,K,M,N,Q,U,V,X,Z&amp;rdquo;), an &lt;code&gt;active_months&lt;/code&gt; value of 12 would produce 1 year of contracts, and a value of 6 would only produce half a year.&lt;/p&gt;
&lt;p&gt;Lastly, the &lt;code&gt;contracts_ahead&lt;/code&gt; field specifies the month spread on calendar spread type securities.  Note that these are &lt;strong&gt;contracts&lt;/strong&gt; ahead and not months ahead.  For example, if you consider a contract trading &amp;ldquo;H,M,U,Z&amp;rdquo; vs. a contract trading &amp;ldquo;F,G,H,J,K,M,N,Q,U,V,X,Z&amp;rdquo;, a value of 1 for the &amp;ldquo;H,M,U,Z&amp;rdquo; contract would create an H1-M1 spread or the like, while a value of 1 with the 12-month traded contract would create an F1-G1 spread.&lt;/p&gt;
&lt;p&gt;The rest of the columns simply get carried over, for further use in other programs/scripts/procedures, such as the &lt;code&gt;load.instruments()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;About the Author: Ilya Kipnis holds a Master&amp;rsquo;s degree in Statistics from Rutgers, and uses and contributes to the R packages blotter, FinancialInstrument, and quantstrat. Ilya may be contacted for consulting and full-time opportunities in finance at &lt;a href=&#34;mailto:ilya.kipnis@gmail.com&#34;&gt;ilya.kipnis@gmail.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>opentick alternatives</title>
      <link>https://blog.fosstrading.com/2009/11/opentick-alternatives.html</link>
      <pubDate>Thu, 05 Nov 2009 18:54:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/11/opentick-alternatives.html</guid>
      <description>I&amp;rsquo;ve been getting a bit of traffic from people searching for opentick (the defunct company), so I&amp;rsquo;ve started a list of similar (but non-free) data providers.
I&amp;rsquo;m not affiliated with any of these vendors, and the list is in no particular order. I&amp;rsquo;ll update this post as more information becomes available.
IQFeed
- features, fees, API**
- starts at $60/month*
- OS: Windows
- Same API as DTN.IQ
eSignal
- features, fees, API**</description>
      <content>&lt;p&gt;I&amp;rsquo;ve been getting a bit of traffic from people searching for opentick &lt;a href=&#34;http://blog.fosstrading.com/2009/04/opentick-is-no-more.html&#34;&gt;(the defunct company)&lt;/a&gt;, so I&amp;rsquo;ve started a list of similar (but non-free) data providers.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not affiliated with any of these vendors, and the list is in no particular order. I&amp;rsquo;ll update this post as more information becomes available.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.iqfeed.net/&#34;&gt;IQFeed&lt;/a&gt;&lt;br&gt;
- &lt;a href=&#34;http://www.iqfeed.net/index.cfm?displayaction=data&amp;amp;section=services&#34;&gt;features&lt;/a&gt;, &lt;a href=&#34;http://www.iqfeed.net/index.cfm?displayaction=data&amp;amp;section=fees&#34;&gt;fees&lt;/a&gt;, &lt;a href=&#34;http://www.iqfeed.net/index.cfm?displayaction=developer&amp;amp;section=main&#34;&gt;API&lt;/a&gt;**&lt;br&gt;
- starts at $60/month*&lt;br&gt;
- OS: Windows&lt;br&gt;
- Same API as &lt;a href=&#34;http://www.dtniq.com/&#34;&gt;DTN.IQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.esignal.com/&#34;&gt;eSignal&lt;/a&gt;&lt;br&gt;
- &lt;a href=&#34;http://www.esignal.com/esignal/features_exp.aspx?name=all&#34;&gt;features&lt;/a&gt;, &lt;a href=&#34;http://www.esignal.com/esignal/pricing.aspx&#34;&gt;fees&lt;/a&gt;, &lt;a href=&#34;http://www.esignal.com/esignal/features_exp.aspx?name=activex&#34;&gt;API&lt;/a&gt;**&lt;br&gt;
- starts at $125/month*&lt;br&gt;
- OS: Windows&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.eoddata.com/Default.aspx&#34;&gt;eoddata&lt;/a&gt;&lt;br&gt;
- &lt;a href=&#34;http://www.eoddata.com/Products/Default.aspx&#34;&gt;features, fees, API&lt;/a&gt;&lt;br&gt;
- some data are free, as low as 1-minute intraday data for $19.95/month&lt;br&gt;
- OS: Windows&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.marketfeed.com/&#34;&gt;Marketfeed&lt;/a&gt;&lt;br&gt;
- &lt;a href=&#34;http://www.marketfeed.com/Integration_Basic.htm&#34;&gt;features, fees, API&lt;/a&gt;**&lt;br&gt;
- starts at $20/month*, access via API starts at $400/year&lt;br&gt;
- OS: Windows&lt;/p&gt;
&lt;p&gt;Notes:&lt;br&gt;
* plus exchange fees&lt;br&gt;
** API access may cost extra&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Xasax closes shop</title>
      <link>https://blog.fosstrading.com/2009/10/xasax-closes-shop.html</link>
      <pubDate>Sun, 18 Oct 2009 11:21:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/10/xasax-closes-shop.html</guid>
      <description>Six months after shutting down opentick completely Xasax (opentick&amp;rsquo;s parent company) has followed suit.
It looks like Xasax hit funding problems in August&amp;hellip; Inside Market Data mentions the above in this story. Here is the full story (subscription required).</description>
      <content>&lt;p&gt;Six months after &lt;a href=&#34;http://blog.fosstrading.com/2009/04/opentick-is-no-more.html&#34;&gt;shutting down opentick completely&lt;/a&gt; Xasax (opentick&amp;rsquo;s parent company) has followed suit.&lt;/p&gt;
&lt;p&gt;It looks like Xasax hit funding problems in August&amp;hellip; &lt;a href=&#34;http://www.watersonline.com/public/showPage.html?page=imd_index&#34;&gt;Inside Market Data&lt;/a&gt; mentions the above in &lt;a href=&#34;http://www.watersonline.com/public/showPage.html?page=868403&#34;&gt;this story&lt;/a&gt;. Here is the &lt;a href=&#34;http://www.watersonline.com/public/showPage.html?page=868401&#34;&gt;full story&lt;/a&gt; (subscription required).&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>opentick is no more</title>
      <link>https://blog.fosstrading.com/2009/04/opentick-is-no-more.html</link>
      <pubDate>Fri, 17 Apr 2009 14:46:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/04/opentick-is-no-more.html</guid>
      <description>After a year of &amp;ldquo;we plan to accept new subscribers shortly&amp;rdquo;, opentick has shut its doors completely. As of March 20th, the opentick service is no longer available.
From opentick.com:
 3/16/2009
To opentick subscribers, friends, supporters, contributors and the rest of the community&amp;hellip;
It has been quite a journey for opentick, and for those of you who have been with us for the ride we cannot thank you enough for the support, contributions and guidance you have given us over the course of the last 5 years.</description>
      <content>&lt;p&gt;After a year of &amp;ldquo;we plan to accept new subscribers shortly&amp;rdquo;, &lt;a href=&#34;http://www.opentick.com/&#34;&gt;opentick&lt;/a&gt; has shut its doors completely. As of March 20th, the opentick service is no longer available.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;http://www.opentick.com/&#34;&gt;opentick.com&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3/16/2009&lt;/p&gt;
&lt;p&gt;To opentick subscribers, friends, supporters, contributors and the rest of the community&amp;hellip;&lt;/p&gt;
&lt;p&gt;It has been quite a journey for opentick, and for those of you who have been with us for the ride we cannot thank you enough for the support, contributions and guidance you have given us over the course of the last 5 years. We could not have come as far as we have without you.&lt;/p&gt;
&lt;p&gt;However, we are sad to say that the time has come for us to close the doors for opentick. However, this isn&amp;rsquo;t goodbye. In fact, it&amp;rsquo;s a new beginning. We will be introducing a fresh service with all the bells and whistles we&amp;rsquo;ve been slaving on over the course of the last year under a new name, a new website and a new level of service. Check back here in the near future for more information about the forthcoming new company and service. Of course amongst all these changes, there are some things that will remain the same - we still aim to provide a reliable free market data service, with an open architecture for a wide range of software platform support.&lt;/p&gt;
&lt;p&gt;If you are a current paying subscriber, this March billing cycle will be your final billing cycle; at your next billing date service will be terminated. If you are a delayed or historical data user not currently paying for service, your account will be deactivated as of Friday, March 20th.&lt;/p&gt;
&lt;p&gt;Sincerely,&lt;br&gt;
opentick Staff&lt;/p&gt;
&lt;p&gt;One day, we shall come back. Yes, we shall come back. Until then, there must be no regrets, no tears, no anxieties. Just go forward in all your beliefs, and prove to us we are not mistaken in ours.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;rsquo;m not optimistic their new offering (most likely their sister company, &lt;a href=&#34;http://www.xasax.com/&#34;&gt;Xasax&lt;/a&gt;) will be available anytime soon. The managers of the two companies sub-optimally managed expectations with opentick and potential Xasax customers are sure to keep that in mind.&lt;/p&gt;
&lt;p&gt;At least I learned quite a bit creating the &amp;lsquo;opentick&amp;rsquo; package, since it is now useless&amp;hellip; perhaps Xasax will have a similar API, but I won&amp;rsquo;t get my hopes up.&lt;/p&gt;
&lt;p&gt;Related Posts:&lt;br&gt;
&lt;a href=&#34;http://blog.fosstrading.com/2009/10/xasax-closes-shop.html&#34;&gt;Xasax closes shop&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://blog.fosstrading.com/2009/11/opentick-alternatives.html&#34;&gt;opentick alternatives&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
