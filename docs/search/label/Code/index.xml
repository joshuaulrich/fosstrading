<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on FOSS Trading</title>
    <link>https://blog.fosstrading.com/search/label/Code.html</link>
    <description>Recent content in Code on FOSS Trading</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Mar 2014 12:25:00 -0500</lastBuildDate>
    
	<atom:link href="https://blog.fosstrading.com/search/label/Code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to PortfolioAnalytics</title>
      <link>https://blog.fosstrading.com/2014/03/intro-to-portfolioanalytics.html</link>
      <pubDate>Sat, 29 Mar 2014 12:25:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2014/03/intro-to-portfolioanalytics.html</guid>
      <description>This is a guest post by Ross Bennett. Ross is currently enrolled in the University of Washington Master of Science in Computational Finance &amp;amp; Risk Management program with an expected graduation date of December 2014. He worked on the PortfolioAnalytics package as part of the Google Summer of Code 2013 project and continues to work on the package as a Research Assistant at the University of Washington.
His work on the package focused on implementing a portfolio specification to separate and modularize assets, constraints, and objectives.</description>
    </item>
    
    <item>
      <title>quantstrat is slow</title>
      <link>https://blog.fosstrading.com/2013/11/quantstrat-is-slow.html</link>
      <pubDate>Mon, 04 Nov 2013 06:37:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2013/11/quantstrat-is-slow.html</guid>
      <description>The complaint I hear most frequently about quantstrat is that it&amp;rsquo;s slow, especially for large data. Some of this slow performance is due to quantstrat treating all strategies as path-dependent by default. Path dependence requires rules to be re-evaluated for each timestamp with a signal. More signals equates to longer run-times.
If your strategy is not path-dependent, you can get a fairly substantial performance improvement by turning path-dependence off. If your strategy truly is path-dependent, keep reading&amp;hellip;</description>
    </item>
    
    <item>
      <title>A New plot.xts</title>
      <link>https://blog.fosstrading.com/2012/08/a-new-plot-xts.html</link>
      <pubDate>Wed, 15 Aug 2012 13:52:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2012/08/a-new-plot-xts.html</guid>
      <description>The Google Summer of Code (2012) project to extend xts has produced a very promising new plot.xts function. Michael Weylandt, the project&amp;rsquo;s student, wrote R-SIG-Finance to request impressions, feedback, and bug reports. The function is housed in the xtsExtra package of the xts project on R-Forge.
Please try xtsExtra::plot.xts and let us know what you think. A sample of the eye-candy produced by the code in Michael&amp;rsquo;s email is below. Granted, this isn&amp;rsquo;t a one-liner, but it&amp;rsquo;s certainly impressive!</description>
    </item>
    
    <item>
      <title>R in Google Summer of Code 2012</title>
      <link>https://blog.fosstrading.com/2012/03/r-in-google-summer-of-code-2012.html</link>
      <pubDate>Fri, 23 Mar 2012 13:53:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2012/03/r-in-google-summer-of-code-2012.html</guid>
      <description>This post is a slightly revised (and &amp;ldquo;blogified&amp;rdquo;) version of the message Brian Peterson has sent to various R mailing lists.
Once again, R has been accepted as a mentoring organization for the Google Summer of Code (2012). We invite students interested in this program to learn more about it. A good starting point is the R GSoC wiki.
Students participating in the program receive US$5,000 for successful completion of a GSoC project, a great resume item, and an opportunity to work with R package authors.</description>
    </item>
    
    <item>
      <title>Tactical asset allocation using quantstrat</title>
      <link>https://blog.fosstrading.com/2011/08/tactical-asset-allocation-using.html</link>
      <pubDate>Tue, 23 Aug 2011 20:55:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/08/tactical-asset-allocation-using.html</guid>
      <description>As promised in the introduction to quantstrat, here is an example strategy. I thought I&amp;rsquo;d start with the obligatory tactical asset allocation (TAA) strategy. This post will replicate the strategy in the post, tactical asset allocation using blotter.
The &amp;ldquo;faber&amp;rdquo; demo in the quanstrat package contains a TAA strategy but it uses a slightly different approach than the code we&amp;rsquo;re trying to replicate. There are two major differences:
  The blotter TAA code initiates a position at the first observation where the close is above the SMA.</description>
    </item>
    
    <item>
      <title>Historical / Future Volatility Correlation Stability</title>
      <link>https://blog.fosstrading.com/2010/04/historical-future-volatility.html</link>
      <pubDate>Sun, 11 Apr 2010 12:53:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2010/04/historical-future-volatility.html</guid>
      <description>Michael Stokes, author of the MarketSci blog recently published a thought-provoking post about the correlation between historical and future volatility (measured as the standard deviation of daily close price percentage changes). This post is intended as an extension of his &amp;ldquo;unfinished thought&amp;rdquo;, not a critique.
He suggests using his table of volatility correlations as a back-of-the-envelope approach to estimate future volatility, which led me to question the stability of the correlations in his table.</description>
    </item>
    
    <item>
      <title>Tactical asset allocation using blotter</title>
      <link>https://blog.fosstrading.com/2009/11/tactical-asset-allocation-using-blotter.html</link>
      <pubDate>Wed, 18 Nov 2009 21:18:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/11/tactical-asset-allocation-using-blotter.html</guid>
      <description>NOTE: If you simply want to test strategies in R, please see the post: Tactical Asset Allocation Using quantstrat. quantstrat uses blotter behind the scenes, but provides a higher level of abstraction.
blotter is an R package that tracks the P&amp;amp;L of your trading systems (or simulations), even if your portfolio spans many security types and/or currencies. This post uses blotter to track a simple two-ETF trading system.
The contents of this post borrow heavily from code and comments in the &amp;ldquo;longtrend&amp;rdquo; demo script in the blotter package.</description>
    </item>
    
    <item>
      <title>David Varadi&#39;s RSI(2) alternative</title>
      <link>https://blog.fosstrading.com/2009/07/david-varadis-rsi2-alternative.html</link>
      <pubDate>Sun, 19 Jul 2009 08:38:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/07/david-varadis-rsi2-alternative.html</guid>
      <description>Here&amp;rsquo;s a quick R implementation of David Varadi&amp;rsquo;s alternative to the RSI(2). Michael Stokes over at the MarketSci blog has three great posts exploring this indicator:
 Varadi&amp;rsquo;s RSI(2) Alternative: The DV(2) RSI(2) vs. DV(2) Last Couple of Notes on DV(2)  Here&amp;rsquo;s the R code:
DV &amp;lt;- function(HLC, n=2, bounded=FALSE) { # &amp;#34;HLC&amp;#34; is an _xts_ object with &amp;#34;High&amp;#34;, &amp;#34;Low&amp;#34;, and &amp;#34;Close&amp;#34;  # columns, in that order.  # This is David Varadi&amp;#39;s alternative to the RSI(2).</description>
    </item>
    
    <item>
      <title>RSI(2) Evaluation</title>
      <link>https://blog.fosstrading.com/2009/06/rsi2-evaluation.html</link>
      <pubDate>Sun, 28 Jun 2009 22:02:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/06/rsi2-evaluation.html</guid>
      <description>This post continues the series of investigating the RSI(2) strategy. The first post replicated this simple RSI(2) strategy from the MarketSci Blog using R. The second post showed how to replicate the strategy that scales in/out of RSI(2).
If you like the RSI(2), be sure to check out David Varadi&amp;rsquo;s RSI(2) alternative!
This post will use the PerformanceAnalytics package to evaluate the rules that scale in/out of positions. I&amp;rsquo;ve also provided a simple function that provides some summary statistics.</description>
    </item>
    
    <item>
      <title>RSI(2) with Position Sizing</title>
      <link>https://blog.fosstrading.com/2009/05/rsi2-with-position-sizing.html</link>
      <pubDate>Fri, 01 May 2009 20:58:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/05/rsi2-with-position-sizing.html</guid>
      <description>Though it&amp;rsquo;s more than two weeks later, here&amp;rsquo;s the second post in the series that will demonstrate how to build, test, and implement a trading strategy with R. You can find the first post here.
The first post replicated this simple RSI(2) strategy from the MarketSci Blog. This second post will demonstrate how to replicate this strategy that scales in/out of RSI(2).
A couple notes before moving to the code:</description>
    </item>
    
    <item>
      <title>Testing RSI(2) with R, First Steps</title>
      <link>https://blog.fosstrading.com/2009/04/testing-rsi2-with-r.html</link>
      <pubDate>Mon, 13 Apr 2009 22:35:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/04/testing-rsi2-with-r.html</guid>
      <description>This is the first of a series of posts that will demonstrate how to build, test, and implement a trading strategy using my favorite FOSS, R. I chose the RSI(2) strategy because it has gotten considerable attention on trading blogs over the past 6 months.
In particular, I will be replicating and extending some of the results from Michael Stokes&amp;rsquo; excellent MarketSci Blog. This post will focus on replicating this simple RSI(2) strategy.</description>
    </item>
    
  </channel>
</rss>