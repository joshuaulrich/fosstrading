<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xts on FOSS Trading</title>
    <link>https://blog.fosstrading.com/search/label/xts/</link>
    <description>Recent content in xts on FOSS Trading</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jan 2024 12:41:00 -0500</lastBuildDate><atom:link href="https://blog.fosstrading.com/search/label/xts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>xts_0.13.2 on CRAN</title>
      <link>https://blog.fosstrading.com/2024/01/xts-0-13-2-on-cran/</link>
      <pubDate>Mon, 22 Jan 2024 12:41:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2024/01/xts-0-13-2-on-cran/</guid>
      <description>&lt;p&gt;An updated version of &lt;a href=&#34;http://cran.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; is now on &lt;a href=&#34;http://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;. The most notable change is that &lt;code&gt;plot.xts()&lt;/code&gt; now supports a log scale y-axis. This involved a significant refactor of the &lt;code&gt;plot.xts()&lt;/code&gt; internals, so it&amp;rsquo;s possible to have introduced some bugs.&lt;/p&gt;
&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add ability to log scale the y-axis in &lt;code&gt;plot.xts()&lt;/code&gt;. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/103&#34;&gt;#103&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Significantly refactor the internals of &lt;code&gt;plot.xts()&lt;/code&gt;. This made it a lot easier to add the y-axis log scale. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/408&#34;&gt;#408&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Print a message when &lt;code&gt;period.apply()&lt;/code&gt; is called with &lt;code&gt;FUN = mean&lt;/code&gt; because it calculates the mean for each column, not all the data in    the subset like it does for all other functions. The message says to use &lt;code&gt;FUN = colMeans&lt;/code&gt; for current behavior and &lt;code&gt;FUN = function(x) mean(x)&lt;/code&gt; to calculate the mean for all the data. This information is also included in the help files. The option &lt;code&gt;xts.message.period.apply.mean = FALSE&lt;/code&gt; suppresses the message. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/124&#34;&gt;#124&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Actually change the underlying index values when &amp;rsquo;tclass&amp;rsquo; is changed from a class with a timezone (e.g. POSIXct) to one without a        timezone (e.g. Date). Add a warning when this happens, with a global option to always suppress the warning. Thanks to &lt;a href=&#34;https://github.com/dppalomar&#34;&gt;Daniel Palomar&lt;/a&gt; for the report and suggestion! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/311&#34;&gt;#311&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bug-fixes&#34;&gt;Bug Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fix error when &lt;code&gt;print.xts()&lt;/code&gt; is called &amp;lsquo;quote&amp;rsquo; or &amp;lsquo;right&amp;rsquo; arguments. Thanks to &lt;a href=&#34;https://github.com/WillemMaetens&#34;&gt;Willem Maetens&lt;/a&gt; for the report and patch! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/401&#34;&gt;#401&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix &lt;code&gt;addPolygon()&lt;/code&gt; so it renders when &lt;code&gt;observation.based = TRUE&lt;/code&gt;. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/403&#34;&gt;#403&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print trailing zeros for index value with fractional seconds, so every index value has the same number of characters. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/404&#34;&gt;#404&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts_0.13.1 on CRAN</title>
      <link>https://blog.fosstrading.com/2023/04/xts-0-13-1-on-cran/</link>
      <pubDate>Mon, 24 Apr 2023 10:54:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2023/04/xts-0-13-1-on-cran/</guid>
      <description>&lt;p&gt;An updated version of &lt;a href=&#34;http://cran.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; is now on &lt;a href=&#34;http://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;. This release patches a few issues with the features added in version 0.13.0 and addresses a few maintenance issues that popped up recently.&lt;/p&gt;
&lt;h3 id=&#34;patches-for-features-added-in-0130&#34;&gt;Patches for features added in 0.13.0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Format each column individually before printing. The top/bottom rows could have a different number of decimal places and there are often multiple varying spaces between columns. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;volume&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;ma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2022-01-03&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;476.470&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;803961.000&lt;/span&gt;          &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2022-01-03&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;476.700&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;179476.000&lt;/span&gt;          &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2022-01-03&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;476.540&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;197919.000&lt;/span&gt;          &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;kc&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2023-03-16&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;52&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;394.6000&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;46728.0000&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;392.8636&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2023-03-16&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;53&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;394.6500&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;64648.0000&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;392.8755&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2023-03-16&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;54&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;394.6500&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;69900.0000&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;392.8873&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are 4 spaces between the index and the &amp;lsquo;close&amp;rsquo; column, 2 between &amp;lsquo;close&amp;rsquo; and &amp;lsquo;volume&amp;rsquo;, and 4 between &amp;lsquo;volume&amp;rsquo; and &amp;lsquo;ma&amp;rsquo;. There should be a consistent number of spaces between the columns. Most other classes of objects print with 1 space between the columns. The top rows have 3 decimals and the bottom rows have 4. These should also be the same. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/321&#34;&gt;#321&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make column names based on number of columns. The original code was a lot more complicated because it tried to account for truncating the number of printed columns. That functionality was removed because of how complicated it was. So now we can simply create printed column names from the number of columns. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/395&#34;&gt;#395&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only convert printed index values to character. Converting the entire index to character is time-consuming for xts objects with many observations. It can take more than a second to print an xts object with 1 million observations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduce instances when &lt;code&gt;dplyr::lag()&lt;/code&gt; warning is shown. The warning was shown whenever it detected dplyr is installed, even if the user wasn&amp;rsquo;t actively using dplyr. That caused an excessive amount of noise when other packages attached xts (e.g. quantmod). Thanks to Duncan Murdoch for the report and suggested fix! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/393&#34;&gt;#393&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bug-fixes&#34;&gt;Bug Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Return &amp;lsquo;POSIXct&amp;rsquo; if object has no &amp;rsquo;tclass&amp;rsquo;. An empty string is not a valid &amp;rsquo;tclass&amp;rsquo;, so it can cause an error.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix &lt;code&gt;xts()&lt;/code&gt; for zero-row data.frames. The &lt;code&gt;xts()&lt;/code&gt; constructor would create an object with a list for coredata when &lt;code&gt;x&lt;/code&gt; is a data.frame with no rows. xts objects can&amp;rsquo;t have lists as coredata, so it should convert &lt;code&gt;x&lt;/code&gt; to a matrix and throw an error if &lt;code&gt;x&lt;/code&gt; is a list. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/394&#34;&gt;#394&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix &lt;code&gt;as.data.frame()&lt;/code&gt; when converting a data.frame with column names to xts when there&amp;rsquo;s only one non-time-based column. Previously the xts object would not have the data.frame column name. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/391&#34;&gt;#391&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Treat &lt;code&gt;NA&lt;/code&gt; the same as &lt;code&gt;NULL&lt;/code&gt; for &amp;lsquo;start&amp;rsquo; or &amp;rsquo;end&amp;rsquo; in &lt;code&gt;window.xts()&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; represents an undefined index value and &lt;code&gt;NA&lt;/code&gt; represents an unknown or missing index value. xts does not allow &lt;code&gt;NA&lt;/code&gt; as index values, so subsetting an xts or zoo object by &lt;code&gt;NA&lt;/code&gt; returns a zero-length object. Therefore a &lt;code&gt;NA&lt;/code&gt; (unknown) index value is essentially the same as an undefined index value. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/383&#34;&gt;#383&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/345&#34;&gt;#345&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Warn and remove &lt;code&gt;NA&lt;/code&gt; when &lt;code&gt;periodicity()&lt;/code&gt; called on date-time vector with any &lt;code&gt;NA&lt;/code&gt; values. Previously it threw the uninformative error below. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/289&#34;&gt;#289&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;try.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#39;x&amp;#39; needs to be timeBased or xtsible&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;needs&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeBased&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xtsible&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Account for timezones when making names for the list &lt;code&gt;split.xts()&lt;/code&gt; creates. This was specifically a problem if the xts object&amp;rsquo;s index was &lt;code&gt;yearmon&lt;/code&gt; because &lt;code&gt;as.yearmon.POSIXct()&lt;/code&gt; always sets &lt;code&gt;tz = &amp;quot;GMT&amp;quot;&lt;/code&gt; when calling &lt;code&gt;as.POSIXlt()&lt;/code&gt;, regardless of the xts&amp;rsquo; index &amp;rsquo;tzone&amp;rsquo; attribute.  That can cause the &lt;code&gt;as.yearmon()&lt;/code&gt; results to be different days for GMT and the index&amp;rsquo;s timezone. Use &lt;code&gt;format.POSIXct()&lt;/code&gt; for &amp;ldquo;months&amp;rdquo; because it checks for a &amp;rsquo;tzone&amp;rsquo; attribute before converting to POSIXlt and calling &lt;code&gt;format.POSIXlt()&lt;/code&gt;. The conversion to POSIXlt is important because it checks and uses the &amp;rsquo;tzone&amp;rsquo; attribute before considering the &amp;rsquo;tz&amp;rsquo; argument. So it effectively ignores the &lt;code&gt;tz = &amp;quot;GMT&amp;quot;&lt;/code&gt; setting in &lt;code&gt;as.yearmon()&lt;/code&gt;. This is also the reason for calling &lt;code&gt;as.POSIXlt()&lt;/code&gt; before calling &lt;code&gt;as.yearqtr()&lt;/code&gt;. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/392&#34;&gt;#392&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignore attribute order in &lt;code&gt;all.equal()&lt;/code&gt;. Attribute order shouldn&amp;rsquo;t matter. That can be checked with &lt;code&gt;identical()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;chores&#34;&gt;Chores&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add notes on &lt;code&gt;plot.xts()&lt;/code&gt; nomenclature and structure. Also add ASCII art to illustrate definitions and layout. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/103&#34;&gt;#103&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Register missing S3 methods and update signatures. With R-devel (83995-ish), &lt;code&gt;R CMD check&lt;/code&gt; notes these S3 methods are not registered. It also notes that the signatures for &lt;code&gt;as.POSIXct.tis()&lt;/code&gt; and &lt;code&gt;str.replot_xts()&lt;/code&gt; do not match the respective generics. &lt;code&gt;R CMD check&lt;/code&gt; also thinks &lt;code&gt;time.frequency()&lt;/code&gt; is a S3 method because &lt;code&gt;time()&lt;/code&gt; is a generic. The function isn&amp;rsquo;t exported, so renaming won&amp;rsquo;t break any external code. Thanks to Kurt Hornik for the report. Issues with functionality for &amp;rsquo;tis&amp;rsquo; were also identified. I removed &amp;rsquo;tis&amp;rsquo; support entirely because the implementation was not even a bare minimum, and it&amp;rsquo;s not clear it even worked correctly. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/398&#34;&gt;#398&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add instructions to update old objects. Old xts objects do not have &amp;rsquo;tclass&amp;rsquo; and &amp;rsquo;tzone&amp;rsquo; attributes on the index. Add a function to update the object attributes and add a note to the warning to show how to use it. Also, only call &lt;code&gt;tzone()&lt;/code&gt; and &lt;code&gt;tclass()&lt;/code&gt; once in &lt;code&gt;check.TZ()&lt;/code&gt;. Calling these functions multiple times throws multiple warnings for xts objects created before the &amp;rsquo;tclass&amp;rsquo; and &amp;rsquo;tzone&amp;rsquo; were attached to the index instead of the xts object. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/306&#34;&gt;#306&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts_0.13.0 on CRAN</title>
      <link>https://blog.fosstrading.com/2023/02/xts-0-13-0-on-cran/</link>
      <pubDate>Tue, 21 Feb 2023 14:58:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2023/02/xts-0-13-0-on-cran/</guid>
      <description>&lt;p&gt;An updated version of &lt;a href=&#34;http://cran.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; is now on &lt;a href=&#34;http://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;. This release adds several exciting changes: open-ended time-of-day subsetting, smarter conversions to xts from data.frames/data.tables/tibbles; &lt;code&gt;to.period()&lt;/code&gt; handles custom endpoint values, &lt;code&gt;print()&lt;/code&gt; truncates rows like data.table, and &lt;code&gt;str()&lt;/code&gt; provides more informative output. There are also changes to make xts more consistent with zoo, some minor speed improvements, and the usual smattering of bug fixes.&lt;/p&gt;
&lt;p&gt;For some reason, I decided it was a good idea to go through the oldest GitHub issues and determine whether they should be fixed or closed without being fixed. Some of the GitHub issues are open issues from when xts was still on R-Forge! The oldest issue fixed in this release was opened on 2013-09-15, and another one was opened on 2014-03-09! Better late than never I guess. ;-)&lt;/p&gt;
&lt;h3 id=&#34;new-features&#34;&gt;New Features&lt;/h3&gt;
&lt;p&gt;The coolest new feature is the ability to use open-ended ranges for time-of-day subsetting. So you can subset by time of day from the start/end of the day without providing the start/end times (i.e. 00:00:00.000/23:59:59.999). Thanks to Chris Katsulis for the suggestion! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/243&#34;&gt;#243&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# an hourly sequence of times, and an xts object using them&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;times&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;timeBasedSeq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2023-02-01/2023-02-05/H&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;seq_along&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;times&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;times&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# function to show the first and last index values for each day&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;index_range_by_day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;by_day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;days&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;index_range&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sep&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; / &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;by_day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index_range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# between the start of the day and 5pm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;index_range_by_day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/T1800&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-01`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-01 / 2023-02-01 18:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-02`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-02 / 2023-02-02 18:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-03`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-03 / 2023-02-03 18:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-04`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-04 / 2023-02-04 18:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-05`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-05 / 2023-02-05 18:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# between 5am and the end of the day&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;index_range_by_day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;T0500/&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-01`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-01 05:00:00 / 2023-02-01 23:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-02`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-02 05:00:00 / 2023-02-02 23:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-03`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-03 05:00:00 / 2023-02-03 23:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-04`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-04 05:00:00 / 2023-02-04 23:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## $`2023-02-05`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## [1] &amp;#34;2023-02-05 05:00:00 / 2023-02-05 23:00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;You can now pass custom endpoints to &lt;code&gt;to.period()&lt;/code&gt; using the &amp;lsquo;period&amp;rsquo; argument. So you can aggregate on something other than the times that &lt;code&gt;endpoints()&lt;/code&gt; supports. Thanks to Ethan B. Smith for the suggestion! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/302&#34;&gt;#302&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample_matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;as.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample_matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# aggregate to OHLC by week ending on Friday&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;week_fri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to.period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;endpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;weeks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;week_fri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##              x.Open   x.High    x.Low  x.Close&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-07 50.03978 50.42188 49.95041 49.99185&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-14 50.03555 50.62395 49.80454 50.60145&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-21 50.61724 50.77336 50.02142 50.42090&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-28 50.36008 50.43875 49.87468 49.88096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-02-04 49.85624 50.55509 49.76308 50.55509&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-02-11 50.52389 50.91776 50.45977 50.91160&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# aggregate to OHLC by week ending on Wednesday&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;wednesdays&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;which&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;.indexwday&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;week_wed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to.period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wednesdays&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;week_wed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##              x.Open   x.High    x.Low  x.Close&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-03 50.03978 50.42188 49.95041 50.39767&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-10 50.42096 50.42096 49.80454 49.97246&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-17 49.88529 50.77336 49.88529 50.48644&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-24 50.48051 50.60712 50.02142 50.23145&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-31 50.20738 50.28268 49.76308 50.22578&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-02-07 50.22448 50.71661 50.19101 50.60611&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h3&gt;
&lt;p&gt;The release also contains some quality of life changes to &lt;code&gt;print()&lt;/code&gt; and &lt;code&gt;str()&lt;/code&gt;. Now &lt;code&gt;print()&lt;/code&gt; only shows the first and last &amp;lsquo;show.rows&amp;rsquo; rows (default 10) if number of rows is &amp;gt; &amp;lsquo;max.rows&amp;rsquo; (default 100), similar to &lt;a href=&#34;https://cran.r-project.org/package=data.table&#34;&gt;data.table&lt;/a&gt; (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/321&#34;&gt;#321&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample_matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;as.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample_matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##                Open     High      Low    Close&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-02 50.03978 50.11778 49.95041 50.11778&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-03 50.23050 50.42188 50.23050 50.39767&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-04 50.42096 50.42096 50.26414 50.33236&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-05 50.37347 50.37347 50.22103 50.33459&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-06 50.24433 50.24433 50.11121 50.18112&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-07 50.13211 50.21561 49.99185 49.99185&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-08 50.03555 50.10363 49.96971 49.98806&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-09 49.99489 49.99489 49.80454 49.91333&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-10 49.91228 50.13053 49.91228 49.97246&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-01-11 49.88529 50.23910 49.88529 50.23910&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##        ...                                    &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-21 47.71012 47.71012 47.61106 47.62921&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-22 47.56849 47.59266 47.32549 47.32549&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-23 47.22873 47.24771 47.09144 47.24771&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-24 47.23996 47.30287 47.20932 47.22764&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-25 47.20471 47.42772 47.13405 47.42772&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-26 47.44300 47.61611 47.44300 47.61611&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-27 47.62323 47.71673 47.60015 47.62769&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-28 47.67604 47.70460 47.57241 47.60716&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-29 47.63629 47.77563 47.61733 47.66471&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2007-06-30 47.67468 47.94127 47.67468 47.76719&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Now &lt;code&gt;str()&lt;/code&gt; outputs more descriptive information for xts objects. It differentiates between xts objects that are empty (no data and zero-length index), zero-width (no data and has index values), or zero-length (no data&amp;ndash;but has a column dimension and may have column names&amp;ndash;and zero-length index). It also adds column names to the output. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/168&#34;&gt;#168&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/378&#34;&gt;#378&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# empty -- no data and zero-length index&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## An empty xts object &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Data:    double [0, 0]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Index:   POSIXct,POSIXt [0] (TZ: &amp;#34;&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# zero length -- no rows of data and a zero-length index,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#     but has a column dimension and may have column names&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## A zero-length xts object &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Data:    double [0, 1]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Index:   POSIXct,POSIXt [0] (TZ: &amp;#34;&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;zero_length_with_colnames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dimnames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;zero&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zero_length_with_colnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## A zero-length xts object &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Data:    double [0, 1]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Columns: zero&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Index:   POSIXct,POSIXt [0] (TZ: &amp;#34;&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# zero width -- no data and has index values&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Sys.Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## A zero-width xts object on 2023-02-21 / 2023-02-21 containing:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Data:    double [0, 0]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##   Index:   Date [1] (TZ: &amp;#34;UTC&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;There&amp;rsquo;s a nice improvement to &lt;code&gt;as.xts()&lt;/code&gt; for data.frame and similar objects (e.g. data.table, tibble). It will look for a time-based column in the data.frame if it cannot create an index from the row names. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/381&#34;&gt;#381&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;as.Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2023-02-21&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;as.xts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##             A  B&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 2023-02-21 21 42&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;This release also includes a new xts method for &lt;code&gt;na.fill()&lt;/code&gt; that significantly increases performance when &amp;lsquo;fill&amp;rsquo; is a scalar. And it adds a startup warning that &lt;code&gt;dplyr::lag()&lt;/code&gt; breaks method dispatch, which means calls to &lt;code&gt;lag(my_xts)&lt;/code&gt; won&amp;rsquo;t work any more, and suggests a couple ways to work around that breakage.&lt;/p&gt;
&lt;h3 id=&#34;bug-fixes&#34;&gt;Bug Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fixed a typo in the Description section of the documentation for &lt;code&gt;period.apply()&lt;/code&gt; (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/205&#34;&gt;#205&lt;/a&gt;), and added detail to the argument definitions. The original Description has:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the data from &lt;code&gt;INDEX[k]&lt;/code&gt; to &lt;code&gt;INDEX[k+1]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But that&amp;rsquo;s not consistent with the code. It should be:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the data from &lt;code&gt;INDEX[k]+1&lt;/code&gt; to &lt;code&gt;INDEX[k+1]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made &lt;code&gt;merge.xts()&lt;/code&gt; results consistent with &lt;code&gt;merge.zoo()&lt;/code&gt; for zero-width objects. Previously, &lt;code&gt;merge.xts()&lt;/code&gt; returned an empty xts object if called on two or more zero-width xts objects. &lt;code&gt;merge.zoo()&lt;/code&gt; would return a zero-width object with the correct index. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/227&#34;&gt;#227&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/379&#34;&gt;#379&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also made &lt;code&gt;merge.xts()&lt;/code&gt; results consistent with &lt;code&gt;merge.zoo()&lt;/code&gt; for zero-length xts objects that have columns. The result of &lt;code&gt;merge.xts()&lt;/code&gt; did not include the columns of any objects that had one or more columns, but zero rows. A join should include all the columns of the joined objects, regardless of the number of rows in the object. This is consistent with &lt;code&gt;merge.zoo()&lt;/code&gt;. Thanks to Ethan B. Smith for the report and testing! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/222&#34;&gt;#222&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed a long-standing issue with &lt;code&gt;Ops.xts()&lt;/code&gt;.  Now it always returns an object with the same class as the first (left-hand side) argument. It previously returned an xts object even if the first argument was a subclass of xts. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/49&#34;&gt;#49&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Squashed a bug in &lt;code&gt;reclass()&lt;/code&gt; that did not copy the &lt;code&gt;tclass&lt;/code&gt;, &lt;code&gt;tzone&lt;/code&gt;, or &lt;code&gt;tformat&lt;/code&gt; from &amp;lsquo;match.to&amp;rsquo; to the result object. Now it always copies those index attributes. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/43&#34;&gt;#43&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Migrated unit tests from &lt;a href=&#34;https://github.com/romanzenka/RUnit&#34;&gt;RUnit&lt;/a&gt; (which is actively maintained, but no longer actively developed) to &lt;a href=&#34;https://github.com/markvanderloo/tinytest&#34;&gt;tinytest&lt;/a&gt;. Thanks &lt;a href=&#34;https://github.com/markvanderloo&#34;&gt;Mark van der Loo&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added to the &lt;code&gt;endpoints()&lt;/code&gt; documentation to make it clearer that the result is based on the UNIX epoch (midnight 1970, UTC) and not the first observation in the xts index. Thanks to GitHub user Eluvias for the suggestion! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/299&#34;&gt;#299&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed an unnecessary check in &lt;code&gt;na.locf()&lt;/code&gt; (which is not user-facing). Thanks to GitHub user @cgiachalis for the suggestion! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/307&#34;&gt;#307&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated C entry points so they&amp;rsquo;re not able to accidentally be found via dynamic lookup (i.e. &lt;code&gt;.Call(&amp;quot;foo&amp;quot;, ...)&lt;/code&gt;). This makes each call to the C code a few microseconds faster, which is nice. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/260&#34;&gt;#260&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts_0.12.2 on CRAN</title>
      <link>https://blog.fosstrading.com/2022/10/xts-0-12-2-on-cran/</link>
      <pubDate>Sat, 15 Oct 2022 10:21:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2022/10/xts-0-12-2-on-cran/</guid>
      <description>&lt;p&gt;An updated version of &lt;a href=&#34;http://cran.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; is now on &lt;a href=&#34;http://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;. This release is a big one, with lots of changes. Plotting functionality got a lot of attention. Another notable change is that &lt;code&gt;merge.xts()&lt;/code&gt; now supports suffixes. Plus the obligatory bug fixes and refinements to make xts more robust.&lt;/p&gt;
&lt;h3 id=&#34;plotting-functionality-enhancements-and-bug-fixes&#34;&gt;Plotting functionality enhancements and bug fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now omit the data time range from the upper-right portion of a plot by setting &lt;code&gt;main.timespan = FALSE&lt;/code&gt;. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/247&#34;&gt;#247&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;plot.xts()&lt;/code&gt; gained a &lt;code&gt;yaxis.ticks&lt;/code&gt; argument to control the number of y-axis grid lines, instead of always drawing 5 y-axes grid lines. Thanks to &lt;a href=&#34;https://github.com/FredrikWartenberg&#34;&gt;Fredrik Wartenberg&lt;/a&gt; for the feature request and patch! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/374&#34;&gt;#374&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed &lt;code&gt;addEventLines()&lt;/code&gt; when plotted objects have a &amp;lsquo;yearmon&amp;rsquo; index. The ISO-8601 range string was not created correctly. Thanks to &lt;a href=&#34;https://github.com/paessens&#34;&gt;@paessens&lt;/a&gt; for the report. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/353&#34;&gt;#353&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &amp;lsquo;ylim&amp;rsquo; argument is now robust against numerical precision issues. Thanks to &lt;a href=&#34;https://github.com/bollard&#34;&gt;@bollard&lt;/a&gt; for the report, PR, and a ton of help debugging intermediate solutions! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/368&#34;&gt;#368&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Series added to a panel now extend the panel&amp;rsquo;s y-axis. Previously the y-axis limits were based on the first series&amp;rsquo; values and not updated when new series were added. So values of the new series did not appear on the plot if they were outside of the original series&amp;rsquo; min/max. Thanks to &lt;a href=&#34;https://github.com/vspinu&#34;&gt;Vitalie Spinu&lt;/a&gt; for the report and help debugging and testing! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/360&#34;&gt;#360&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All series added to any panel of a plot now update the x-axis of all panels. So the entire plot&amp;rsquo;s x-axis will include every series&amp;rsquo; time index values within the original plot&amp;rsquo;s time range. This behavior is consistent with &lt;code&gt;chart_Series()&lt;/code&gt;. Thanks to &lt;a href=&#34;https://github.com/vspinu&#34;&gt;Vitalie Spinu&lt;/a&gt; for the report and help debugging and testing! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/360&#34;&gt;#360&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/216&#34;&gt;#216&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All y-values are now plotted for series that have duplicate index values, but different data values. Thanks to &lt;a href=&#34;https://github.com/vspinu&#34;&gt;Vitalie Spinu&lt;/a&gt; for the report and help debugging and testing! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/360&#34;&gt;#360&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding a series can now extend the x-axis before/after the plot&amp;rsquo;s existing time index range by setting &lt;code&gt;extend.xaxis = TRUE&lt;/code&gt;. That ensures all of the new series&amp;rsquo; time index values are included in the plot. &lt;code&gt;extend.xaxis = FALSE&lt;/code&gt; by default to maintain backward compatibility. Thanks to &lt;a href=&#34;https://github.com/vspinu&#34;&gt;Vitalie Spinu&lt;/a&gt; for the report and help debugging and testing! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/360&#34;&gt;#360&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other-enhancements-and-bug-fixes&#34;&gt;Other enhancements and bug fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Ops.xts()&lt;/code&gt; no longer changes column names (via &lt;code&gt;make.names()&lt;/code&gt;) when the two objects do not have identical indexes. This makes it consistent with &lt;code&gt;Ops.zoo()&lt;/code&gt;. Thanks to &lt;a href=&#34;https://github.com/tonytonov&#34;&gt;Anton Antonov&lt;/a&gt; for the report! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/114&#34;&gt;#114&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subsetting a zero-length xts object now returns an object with the same storage type as the input. It previously always returned a &amp;rsquo;logical&amp;rsquo; xts object. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/376&#34;&gt;#376&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tclass()&lt;/code&gt; and &lt;code&gt;tzone()&lt;/code&gt; now return the correct values for zero-length xts objects, instead of the defaults from the &lt;code&gt;.xts()&lt;/code&gt; constructor. Thanks to &lt;a href=&#34;https://github.com/AndreMikulec&#34;&gt;Andre Mikulec&lt;/a&gt; for the report and suggested patch! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/255&#34;&gt;#255&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;first()&lt;/code&gt; and &lt;code&gt;last()&lt;/code&gt; now return a zero-length xts object when &lt;code&gt;n = 0&lt;/code&gt;. They previously returned the entire object. This is consistent with the default &lt;code&gt;head()&lt;/code&gt; and &lt;code&gt;tail()&lt;/code&gt; functions, and data.table&amp;rsquo;s &lt;code&gt;first()&lt;/code&gt; and &lt;code&gt;last()&lt;/code&gt; functions. Thanks to &lt;a href=&#34;https://github.com/ethanbsmith&#34;&gt;Ethan B. Smith&lt;/a&gt; for the report and patch! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/350&#34;&gt;#350&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subsetting a zero-width xts now returns an object with the same class, tclass, tzone, and xtsAttributes as the input. Thanks to &lt;a href=&#34;https://github.com/shikokuchuo&#34;&gt;@shikokuchuo&lt;/a&gt; for the report! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/359&#34;&gt;#359&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now &lt;code&gt;endpoints()&lt;/code&gt; always returns last observation. Thanks to GitHub user &lt;a href=&#34;https://github.com/Eluvias&#34;&gt;Eluvias&lt;/a&gt; for the report. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/300&#34;&gt;#300&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now &lt;code&gt;endpoints()&lt;/code&gt; errors for every &lt;code&gt;on&lt;/code&gt; value when &lt;code&gt;k &amp;lt; 1&lt;/code&gt;. It was not throwing an error for &lt;code&gt;k &amp;lt; 1&lt;/code&gt; for &lt;code&gt;on&lt;/code&gt; of &amp;ldquo;years&amp;rdquo;, &amp;ldquo;quarters&amp;rdquo;, or &amp;ldquo;months&amp;rdquo;. Thanks to &lt;a href=&#34;https://github.com/Eluvias&#34;&gt;Eluvias&lt;/a&gt;for the report. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/301&#34;&gt;#301&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed a breaking change (introduced in 0.11.0) in &lt;code&gt;window()&lt;/code&gt; for yearmon and yearqtr indexes. In xts &amp;lt; 0.11.0, &lt;code&gt;window.zoo()&lt;/code&gt; was dispatched when &lt;code&gt;window()&lt;/code&gt; was called on a xts object because there was no &lt;code&gt;window.xts()&lt;/code&gt; method. &lt;code&gt;window.zoo()&lt;/code&gt; supports additional types of values for the &lt;code&gt;start&lt;/code&gt; argument, and possibly other features. Thanks to &lt;a href=&#34;https://github.com/annaymj&#34;&gt;@annaymj&lt;/a&gt; for the report. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/312&#34;&gt;#312&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clarified documentation for &lt;code&gt;axTicksByTime()&lt;/code&gt; to say that returns index locations (e.g. 1, 2, 3) and not timestamps. Thanks to &lt;a href=&#34;https://github.com/ggrothendieck&#34;&gt;Gabor Grothendieck&lt;/a&gt; for the suggestion and feedback. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/354&#34;&gt;#354&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed &lt;code&gt;merge.xts()&lt;/code&gt; on xts objects containing complex types when &lt;code&gt;fill&lt;/code&gt; is provided. It previously threw an error because it treated &lt;code&gt;fill&lt;/code&gt; as double instead of complex. Thanks to &lt;a href=&#34;https://github.com/ggrothendieck&#34;&gt;Gabor Grothendieck&lt;/a&gt; for the report. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/346&#34;&gt;#346&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added a message to tell the user how to disable the &amp;ldquo;object timezone is different from the system timezone&amp;rdquo; warning (set &lt;code&gt;options(xts_check_TZ = FALSE)&lt;/code&gt;). Thanks to &lt;a href=&#34;https://github.com/algoquant&#34;&gt;Jerzy Pawlowski&lt;/a&gt; for the nudge. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/113&#34;&gt;#113&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rbind()&lt;/code&gt; now handles xts objects without dim attribute. It previously threw an obscure error if one of the xts objects did not have a dim attribute. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/361&#34;&gt;#361&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;split.xts()&lt;/code&gt; now always return a named list, making it consistent with &lt;code&gt;split.zoo()&lt;/code&gt;. Thanks to &lt;a href=&#34;https://github.com/ggrothendieck&#34;&gt;Gabor Grothendieck&lt;/a&gt; for the report. (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/357&#34;&gt;#357&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xts objects with a zero-length POSIXct index now have a zero-length POSIXct vector instead of a zero-length integer vector for the index. Thanks to &lt;a href=&#34;https://github.com/JasperSch&#34;&gt;Jasper Schelfhout&lt;/a&gt; for the report and PR! (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/363&#34;&gt;#363&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/pulls/364&#34;&gt;#364&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add supported for suffixes in &lt;code&gt;merge.xts()&lt;/code&gt; results. The suffixes are consistent with &lt;code&gt;merge.default()&lt;/code&gt; and not &lt;code&gt;merge.zoo()&lt;/code&gt;, because &lt;code&gt;merge.zoo()&lt;/code&gt; automatically uses &amp;ldquo;.&amp;rdquo; as a separator between column names, but the default method doesn&amp;rsquo;t. Thanks to Alex Chernyakov for the initial report, &lt;a href=&#34;https://github.com/stucash&#34;&gt;QiuxiaoMu&lt;/a&gt; for testing, and &lt;a href=&#34;https://github.com/pierre-lamarche&#34;&gt;Pierre Lamarche&lt;/a&gt; for the nudge. Better late than never? (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/38&#34;&gt;#38&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/371&#34;&gt;#371&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;You may have noticed that several of these issues have been open a long time. I&amp;rsquo;ve been revisiting historical issues and deciding whether to implement them or close them. I&amp;rsquo;ve already implemented some cool ones in the development version of xts.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m most excited about open-ended time-of-day subsetting. Now you can do things like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/T1700&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# start of the day until 5pm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;T0500/&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 5am until the end of the day&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts_0.12.1 on CRAN</title>
      <link>https://blog.fosstrading.com/2020/09/xts-0-12-1-on-cran/</link>
      <pubDate>Sun, 13 Sep 2020 10:49:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2020/09/xts-0-12-1-on-cran/</guid>
      <description>&lt;p&gt;An updated version of &lt;a href=&#34;http://cran.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; reached &lt;a href=&#34;http://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt; on 2020-09-09. Time-of-day subsetting (e.g. &lt;code&gt;x[&amp;quot;T10:00/T13:00&amp;quot;]&lt;/code&gt;) is 200x faster! (This post includes some notes on some nifty changes in 0.12.0 too, since I didn&amp;rsquo;t post about 0.12.0 when it was released.)&lt;/p&gt;
&lt;p&gt;This is a long-overdue post. I&amp;rsquo;m trying to get int the habit of posting and announcing each of my package releases. So I&amp;rsquo;m writing posts this morning for the most recent release of the most popular packages I maintain. I released an updated version of &lt;a href=&#34;http://cran.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; to &lt;a href=&#34;http://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt; on 2020-09-09.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to highlight a handful of the changes that involve:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;moving index class and index timezone from the xts object itself to the index,&lt;/li&gt;
&lt;li&gt;improvements to time-of-day subsetting (&lt;code&gt;x[&amp;quot;T10:00/T13:00&amp;quot;]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;user contributions, and&lt;/li&gt;
&lt;li&gt;several bug fixes.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;changes-to-index-attributes&#34;&gt;Changes to index attributes&lt;/h3&gt;
&lt;p&gt;The most significant user-facing change in this release is a bug-fix for the functions that would change the &lt;code&gt;tclass&lt;/code&gt; of the xts index. This would happen in calls to &lt;code&gt;reclass()&lt;/code&gt;, &lt;code&gt;period.apply()&lt;/code&gt;, and logical operations on &lt;code&gt;POSIXct&lt;/code&gt; indexes. Thanks to &lt;a href=&#34;https://github.com/TomAndrews&#34;&gt;Tom Andrews&lt;/a&gt; for the report and testing, and to &lt;a href=&#34;https://github.com/philaris&#34;&gt;Panagiotis Cheilaris&lt;/a&gt; for contributing test cases (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/322&#34;&gt;#322&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/pull/323&#34;&gt;#323&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This was a regression due to the main change in version 0.12-0. All the index-attributes were removed from the xts object and are now only attached to the index itself (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/245&#34;&gt;#245&lt;/a&gt;). We took great care to maintain backward compatibility, and throw warnings when deprecated functions are called and when index-attributes are found on the xts object. I apologize for taking this long to get the fix on CRAN.&lt;/p&gt;
&lt;h3 id=&#34;time-of-day-subsetting&#34;&gt;Time-of-day subsetting&lt;/h3&gt;
&lt;p&gt;Another change in 0.12-0 is a significant (~200x!) performance improvement to time-of-day subsetting, thanks to &lt;a href=&#34;https://stackoverflow.com/users/3226167/user3226167&#34;&gt;StackOverflow user3226167&lt;/a&gt; (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/193&#34;&gt;#193&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Then &lt;a href=&#34;https://github.com/claymoremarshall&#34;&gt;Claymore Marshall&lt;/a&gt; added many examples of time-of-day subsetting to &lt;code&gt;?subset.xts&lt;/code&gt;. He also fixed a bug in time-of-day subsetting where subsetting by hour only returned wrong results (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/304&#34;&gt;#304&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/326&#34;&gt;#326&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/pull/328&#34;&gt;#328&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;user-contributions&#34;&gt;User contributions&lt;/h3&gt;
&lt;p&gt;There were also several more user-contributed changes. I love when the community that uses open source software contributes to the project! It&amp;rsquo;s so much more fun than working on it by myself. :)&lt;/p&gt;
&lt;p&gt;These are in a bulleted list in order to highlight each user&amp;rsquo;s contribution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jaymon0703&#34;&gt;Jasen Macike&lt;/a&gt; updated &lt;code&gt;plot.xts()&lt;/code&gt; to support y-axis labels via the &lt;code&gt;ylab&lt;/code&gt; argument (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/333&#34;&gt;#333&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/pull/334&#34;&gt;#334&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MichaelChirico&#34;&gt;Michael Chirico&lt;/a&gt; added an internal &lt;code&gt;isUTC()&lt;/code&gt; function that recognizes many UTC-equivalent time zones (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/319&#34;&gt;#319&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dirk.eddelbuettel.com/&#34;&gt;Dirk Eddelbuettel&lt;/a&gt; updated the C API header to fix the signatures of &lt;code&gt;do_merge_xts()&lt;/code&gt; and &lt;code&gt;is_xts&lt;/code&gt;, which did not return the required type to be called via &lt;code&gt;.Call()&lt;/code&gt;. Thanks to &lt;a href=&#34;https://github.com/kalibera&#34;&gt;Tomas Kalibera&lt;/a&gt; for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/317&#34;&gt;#317&lt;/a&gt;), and to Dirk for the PR (&lt;a href=&#34;https://github.com/joshuaulrich/xts/pull/337&#34;&gt;#337&lt;/a&gt;). &lt;br&gt;
This is a breaking change, but it&amp;rsquo;s only in the C API, and is required to avoid the potential to crash your R session.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/harvey131&#34;&gt;Harvey Smith&lt;/a&gt; fixed the possible values for the &lt;code&gt;major.ticks&lt;/code&gt;, &lt;code&gt;minor.ticks&lt;/code&gt;, and &lt;code&gt;grid.ticks.on&lt;/code&gt; arguments to &lt;code&gt;plot.xts()&lt;/code&gt; in the Details section of the documentation (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/291&#34;&gt;#291&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performance for the &lt;code&gt;period.XYZ()&lt;/code&gt; functions (sum, prod, min, max) is much faster (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/278&#34;&gt;#278&lt;/a&gt;). Thanks to &lt;a href=&#34;https://github.com/ckatsulis&#34;&gt;Chris Katsulis&lt;/a&gt; for the report, and &lt;a href=&#34;https://github.com/harvey131&#34;&gt;Harvey Smith&lt;/a&gt; for several examples.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bug-fixes&#34;&gt;Bug fixes&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;first()&lt;/code&gt; now operates correctly on non-xts objects when &lt;code&gt;n = -1&lt;/code&gt;. Previously it would always return the last two values. Thanks to &lt;a href=&#34;https://github.com/vxg20&#34;&gt;GitHub user vxg20&lt;/a&gt; for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/325&#34;&gt;#325&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.xts()&lt;/code&gt; constructor would create an xts object with row names if &lt;code&gt;x&lt;/code&gt; had row names. This shouldn&amp;rsquo;t happen, because xts objects do not have or support row names (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/298&#34;&gt;#298&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Several binary operations (e.g. +, -, !=, &amp;lt;, etc.) on variations of uncommon xts objects with other xts, matrix, or vector objects, could result in malformed xts objects (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/295&#34;&gt;#295&lt;/a&gt;). Some examples of the types of uncommon xts objects: no dim attribute, zero-width, zero-length.&lt;/p&gt;
&lt;p&gt;Calling &lt;code&gt;as.matrix()&lt;/code&gt; on an xts object without a dim attribute no longer throws an error (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/294&#34;&gt;#294&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;merge.xts()&lt;/code&gt; now honors &lt;code&gt;check.names = FALSE&lt;/code&gt; (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/293&#34;&gt;#293&lt;/a&gt;). It also creates shorter column names when passed unnamed objects, consistent with zoo (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/248&#34;&gt;#248&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;as.zoo.xts()&lt;/code&gt; is now only registered for zoo versions prior to 1.8-5.  Methods to convert an object to another class should reside in the package that implements the target class. Thanks to Kurt Hornik for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/287&#34;&gt;#287&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.parseISO8601()&lt;/code&gt; no longer has a potential length-1 logical error. Thanks to Kurt Hornik for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/280&#34;&gt;#280&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;endpoints()&lt;/code&gt; now honors &lt;code&gt;k &amp;gt; 0&lt;/code&gt; when &lt;code&gt;on = &amp;quot;quarters&amp;quot;&lt;/code&gt;. Thanks to &lt;a href=&#34;https://github.com/alkment&#34;&gt;@alkment&lt;/a&gt; for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/279&#34;&gt;#279&lt;/a&gt;).&lt;/p&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts 0.11-2 on CRAN</title>
      <link>https://blog.fosstrading.com/2018/11/xts-0-11-2-on-cran/</link>
      <pubDate>Tue, 06 Nov 2018 06:35:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/11/xts-0-11-2-on-cran/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cloud.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; version 0.11-2 was published to &lt;a href=&#34;https://cloud.r-project.org/&#34;&gt;CRAN&lt;/a&gt; yesterday. This is quick a bug-fix release.&lt;/p&gt;
&lt;p&gt;Notable changes are below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The xts method for &lt;code&gt;shift.time()&lt;/code&gt; is now registered. Thanks to Philippe Verspeelt for the report and PR (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/268&#34;&gt;#268&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/273&#34;&gt;#273&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;An if-statement in the &lt;code&gt;xts&lt;/code&gt; constructor will no longer try to use a logical vector with length &amp;gt; 1. Code like &lt;code&gt;if (c(TRUE, TRUE))&lt;/code&gt; will throw a warning in an upcoming R release, and this patch will prevent that warning. Thanks to Hugh Parsonage for the report and PR (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/270&#34;&gt;#270&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/272&#34;&gt;#272&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Fix subset when &lt;code&gt;index(i)&lt;/code&gt; and &lt;code&gt;i&lt;/code&gt; contain duplicates. Observations were being incorrectly dropped, and behavior is now consistent with zoo. Thanks to Stack Overflow user &lt;a href=&#34;https://stackoverflow.com/users/4024268/scs&#34;&gt;scs&lt;/a&gt; for the report, and Philippe Verspeelt for the help debugging (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/275&#34;&gt;#275&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Make column names for &lt;code&gt;merge()&lt;/code&gt; results with unnamed objects shorter and more like zoo (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/248&#34;&gt;#248&lt;/a&gt;). Previously, column names could be hundreds, even thousands, of characters. This change has the added benefit of making &lt;code&gt;na.fill()&lt;/code&gt; much faster (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/259&#34;&gt;#259&lt;/a&gt;). NOTE: This may BREAK existing code for integer unnamed objects.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;to.period()&lt;/code&gt; family of functions now use the index timezone when converting intraday index values to daily values (or lower frequency). Previously, the dates would be calculated as UTC dates, instead of dates in the local timezone (as they are now). Thanks to Garrett See and Gabor Grothendieck for the reports (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/53&#34;&gt;#53&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/277&#34;&gt;#277&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts 0.11-1 on CRAN</title>
      <link>https://blog.fosstrading.com/2018/09/xts-0-11-1-on-cran/</link>
      <pubDate>Wed, 12 Sep 2018 13:36:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/09/xts-0-11-1-on-cran/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cloud.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; version 0.11-1 was published to &lt;a href=&#34;https://cloud.r-project.org/&#34;&gt;CRAN&lt;/a&gt; this morning. &lt;a href=&#34;https://cloud.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; provides data structure and functions to work with time-indexed data.  This release contains some awesome features that will transparently make your &lt;a href=&#34;https://cloud.r-project.org/package=xts&#34;&gt;xts&lt;/a&gt; code even faster!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&amp;rsquo;s a new &lt;code&gt;window.xts()&lt;/code&gt; method, thanks to Corwin Joy (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/100&#34;&gt;#100&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/240&#34;&gt;#240&lt;/a&gt;). Corwin also refactored and improved the performance of the binary search algorithm used to subset xts objects. Tom Andrews reported and fixed a few related regressions (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/251&#34;&gt;#251&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/263&#34;&gt;#263&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/264&#34;&gt;#264&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;na.locf.xts()&lt;/code&gt; method loops over columns of multivariate objects in C code, for improved speed and memory performance. Thanks to Chris Katsulis and Tom Andrews for their reports and patches (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/232&#34;&gt;#232&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/233&#34;&gt;#233&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/234&#34;&gt;#234&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/235&#34;&gt;#235&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/237&#34;&gt;#237&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;After many years, &lt;code&gt;merge.xts()&lt;/code&gt; can finally handle multiple character or complex xts objects. Thanks to Ken Williams for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/44&#34;&gt;#44&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;You can use &amp;ldquo;quarters&amp;rdquo; to specify tick/grid mark locations on plots. Thanks to Marc Weibel for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/256&#34;&gt;#256&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are also a few notable bug fixes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make.index.unique()&lt;/code&gt; always returns a unique and sorted index. Thanks to Chris Katsulis for the report and example (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/241&#34;&gt;#241&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Plots have better axis tick mark locations, thanks to Dirk Eddelbuettel (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/246&#34;&gt;#246&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;periodicity()&lt;/code&gt; now warns instead of errors if the xts object contains less than 2 observations (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/230&#34;&gt;#230&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;first()&lt;/code&gt; and &lt;code&gt;last()&lt;/code&gt; now keep dims when they would otherwise be dropped by a regular row subset. This is consistent with &lt;code&gt;head()&lt;/code&gt; and &lt;code&gt;tail()&lt;/code&gt;. Thanks to Davis Vaughan for the report (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/226&#34;&gt;#226&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;An invalid ISO8601 range subset now returns no data instead of all rows (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/96&#34;&gt;#96&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As always, I&amp;rsquo;m looking forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;https://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags. Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance mailing list&lt;/a&gt; (you must subscribe to post). Open an issue &lt;a href=&#34;https://github.com/joshuaulrich/xts&#34;&gt;on GitHub&lt;/a&gt; if you find a bug or want to request a feature, but please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/blob/master/.github/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; first!&lt;/p&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>xts 0.10-2 on CRAN</title>
      <link>https://blog.fosstrading.com/2018/03/xts-0-10-2-on-cran/</link>
      <pubDate>Mon, 19 Mar 2018 05:30:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/03/xts-0-10-2-on-cran/</guid>
      <description>&lt;p&gt;This &lt;a href=&#34;http://joshuaulrich.github.io/xts/&#34;&gt;xts&lt;/a&gt; release contains mostly bugfixes, but there are a few noteworthy features. Some of these features were added in version 0.10-1, but I forgot to blog about it. Anyway, in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;endpoints()&lt;/code&gt; gained sub-second accuracy on Windows (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/202&#34;&gt;#202&lt;/a&gt;)!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;na.locf.xts()&lt;/code&gt; now honors &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;xout&lt;/code&gt; arguments by dispatching to the next method (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/215&#34;&gt;#215&lt;/a&gt;). Thanks to Morten Grum for the report.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;na.locf.xts()&lt;/code&gt; and &lt;code&gt;na.omit.xts()&lt;/code&gt; now support character xts objects. Thanks to Ken Williams and Samo Pahor for the reports (&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues/42&#34;&gt;#42&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many of the bug fixes were related to the new plot.xts() introduced in 0.10-0. And a handful of bug fixes were to make xts more consistent with zoo in some edge cases.&lt;/p&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>xts 0.10-0 on CRAN!</title>
      <link>https://blog.fosstrading.com/2017/07/xts-0-10-0-on-cran/</link>
      <pubDate>Fri, 07 Jul 2017 14:10:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2017/07/xts-0-10-0-on-cran/</guid>
      <description>&lt;p&gt;A new, and long overdue, release of &lt;a href=&#34;http://joshuaulrich.github.io/xts/&#34;&gt;xts&lt;/a&gt; is now on &lt;a href=&#34;https://cran.r-project.org/package=xts&#34;&gt;CRAN&lt;/a&gt;!  The major change is the completely new &lt;a href=&#34;http://joshuaulrich.github.io/xts/plotting_basics.html&#34;&gt;plot.xts()&lt;/a&gt; written by Michael Weylandt and Ross Bennett, and which is based on Jeff Ryan&amp;rsquo;s &lt;code&gt;quantmod::chart_Series()&lt;/code&gt; code.&lt;/p&gt;
&lt;p&gt;Do note that the new &lt;code&gt;plot.xts()&lt;/code&gt; includes breaking changes to the original (and rather limited) &lt;code&gt;plot.xts()&lt;/code&gt;.  However, we believe the new functionality more than compensates for the potential one-time inconvenience.  And I will no longer have to tell people that I use &lt;code&gt;plot.zoo()&lt;/code&gt; on xts objects!&lt;/p&gt;
&lt;p&gt;This release also includes more bug fixes than you can shake a stick at.  We squashed several bugs that could have crashed your R session.  We also fixed some (always pesky and tricky) timezone issues.  We&amp;rsquo;ve also done more sanity checking (e.g. for NA in the index), and provide more informative errors when things aren&amp;rsquo;t right.  And last, but not least, unit tests are running again!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m sure you were hoping to see some examples of the new &lt;code&gt;plot.xts()&lt;/code&gt; functionality.  Rather than clutter up this blog post with code, check out the &lt;a href=&#34;http://joshuaulrich.github.io/xts/plotting_basics.html&#34;&gt;basic examples&lt;/a&gt;, and the &lt;a href=&#34;http://joshuaulrich.github.io/xts/plotting_panels.html&#34;&gt;panel functionality examples&lt;/a&gt; that Ross Bennett created.&lt;/p&gt;


&lt;div class=&#34;container&#34; role=&#34;main&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;p&gt;I look forward to your questions and feedback! If you have a question, please ask on &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; and use the
    &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;[r]&lt;/a&gt; and &lt;a href=&#34;http://stackoverflow.com/questions/tagged/xts&#34;&gt;[xts]&lt;/a&gt; tags.
    Or you can send an email to the &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; mailing list (you must subscribe to post).
    Open an &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;issue on GitHub&lt;/a&gt; if you find a bug or want to request a feature.
    
        Please read the &lt;a href=&#34;https://github.com/joshuaulrich/xts/wiki/Contributing-Guide&#34;&gt;contributing guide&lt;/a&gt; first!
        It will help save time for both of us. ;-)&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Importing and managing financial data</title>
      <link>https://blog.fosstrading.com/2017/06/importing-and-managing-financial-data2/</link>
      <pubDate>Wed, 21 Jun 2017 07:07:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2017/06/importing-and-managing-financial-data2/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m excited to announce my &lt;a href=&#34;https://www.datacamp.com&#34;&gt;DataCamp&lt;/a&gt; course on &lt;a href=&#34;https://www.datacamp.com/courses/importing-and-managing-financial-data-in-r&#34;&gt;importing and managing financial data in R&lt;/a&gt;! I&amp;rsquo;m also honored that it is included in DataCamp&amp;rsquo;s &lt;a href=&#34;https://www.datacamp.com/tracks/quantitative-analyst-with-r&#34;&gt;Quantitative Analyst with R Career Track&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;You can explore the first chapter for free, so be sure to check it out!&lt;/p&gt;
&lt;h3 id=&#34;course-description&#34;&gt;Course Description&lt;/h3&gt;
&lt;p&gt;Financial and economic time series data come in various shapes, sizes, and periodicities. Getting the data into R can be stressful and time-consuming, especially when you need to merge data from several different sources into one data set. This course covers importing data from local files as well as from internet sources.&lt;/p&gt;
&lt;h3 id=&#34;course-outline&#34;&gt;Course Outline&lt;/h3&gt;
&lt;h5 id=&#34;chapter-1-introduction-and-downloading-data&#34;&gt;Chapter 1: Introduction and downloading data&lt;/h5&gt;
&lt;p&gt;A wealth of financial and economic data are available online. Learn how &lt;code&gt;getSymbols()&lt;/code&gt; and &lt;code&gt;Quandl()&lt;/code&gt; make it easy to access data from a variety of sources.&lt;/p&gt;
&lt;h5 id=&#34;chapter-2-extracting-and-transforming-data&#34;&gt;Chapter 2: Extracting and transforming data&lt;/h5&gt;
&lt;p&gt;You&amp;rsquo;ve learned how to import data from online sources, now it&amp;rsquo;s time to see how to extract columns from the imported data. After you&amp;rsquo;ve learned how to extract columns from a single object, you will explore how to import, transform, and extract data from multiple instruments.&lt;/p&gt;
&lt;h5 id=&#34;chapter-3-managing-data-from-multiple-sources&#34;&gt;Chapter 3: Managing data from multiple sources&lt;/h5&gt;
&lt;p&gt;Learn how to simplify and streamline your workflow by taking advantage of the ability to customize default arguments to &lt;code&gt;getSymbols()&lt;/code&gt;. You will see how to customize defaults by data source, and then how to customize defaults by symbol. You will also learn how to handle problematic instrument symbols&lt;/p&gt;
&lt;h6 id=&#34;chapter-4-aligning-data-with-different-periodicities&#34;&gt;Chapter 4: Aligning data with different periodicities&lt;/h6&gt;
&lt;p&gt;You&amp;rsquo;ve learned how to import, extract, and transform data from multiple data sources. You often have to manipulate data from different sources in order to combine them into a single data set. First, you will learn how to convert sparse, irregular data into a regular series. Then you will review how to aggregate dense data to a lower frequency. Finally, you will learn how to handle issues with intra-day data.&lt;/p&gt;
&lt;h5 id=&#34;chapter-5-importing-text-data-and-adjusting-for-corporate-actions&#34;&gt;Chapter 5: Importing text data, and adjusting for corporate actions&lt;/h5&gt;
&lt;p&gt;You&amp;rsquo;ve learned the core workflow of importing and manipulating financial data. Now you will see how to import data from text files of various formats. Then you will learn how to check data for weirdness and handle missing values. Finally, you will learn how to adjust stock prices for splits and dividends.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>plot.xts RFC</title>
      <link>https://blog.fosstrading.com/2015/04/plotxts-rfc/</link>
      <pubDate>Mon, 20 Apr 2015 12:45:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2015/04/plotxts-rfc/</guid>
      <description>&lt;p&gt;We have been working on a new charting engine for &lt;code&gt;xts::plot.xts&lt;/code&gt; for the past couple years. It started with Michael Weylandt&amp;rsquo;s work during the 2012 Google Summer of Code, and Ross Bennett took up the torch during the 2014 GSoC.&lt;/p&gt;
&lt;p&gt;This new engine improves the functionality, modularity, and flexibility of &lt;code&gt;plot.xts&lt;/code&gt; by building off the framework Jeff Ryan began with &lt;code&gt;quantmod::chart_Series&lt;/code&gt;.  The modular framework allows users to plot an xts object and incrementally build custom charts by adding panels of new data (including transformations of the original xts object).&lt;/p&gt;
&lt;p&gt;The main objective was to provide functionality similar to &lt;code&gt;chartSeries&lt;/code&gt; and &lt;code&gt;addTA&lt;/code&gt; for xts objects. The current code includes support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic time series plots with sensible defaults&lt;/li&gt;
&lt;li&gt;Plotting xts objects by column &amp;ldquo;automagically&amp;rdquo; as separate panels&lt;/li&gt;
&lt;li&gt;Small multiples with multiple pages&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Layout-safe&amp;rdquo; so multiple specifications/panels can be charted in a single device&lt;/li&gt;
&lt;li&gt;Easily add data to an existing plot or add panels similar to &lt;code&gt;quantmod::add*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Event lines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The xts team would greatly appreciate any comments, feedback, and bug reports before the upcoming CRAN release at the end of April.&lt;/p&gt;
&lt;p&gt;The new version of &lt;code&gt;plot.xts&lt;/code&gt; is in the main xts development code base, which is available on GitHub in the &lt;a href=&#34;https://github.com/joshuaulrich/xts&#34;&gt;develop branch&lt;/a&gt;.  GitHub is also the place to submit &lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;b&lt;/a&gt;&lt;a href=&#34;https://github.com/joshuaulrich/xts/issues&#34;&gt;ug reports and feature requests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the new &lt;code&gt;plot.xts&lt;/code&gt; includes breaking changes to the original (and rather limited) &lt;code&gt;plot.xts&lt;/code&gt;.  However, we believe the new functionality more than compensates for the potential one-time inconvenience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A New plot.xts</title>
      <link>https://blog.fosstrading.com/2012/08/a-new-plot-xts/</link>
      <pubDate>Wed, 15 Aug 2012 13:52:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2012/08/a-new-plot-xts/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://google-melange.appspot.com/gsoc/homepage/google/gsoc2012&#34;&gt;Google Summer of Code (2012)&lt;/a&gt; project to &lt;a href=&#34;http://rwiki.sciviews.org/doku.php?id=developers:projects:gsoc2012:xts&#34;&gt;extend xts&lt;/a&gt; has produced a very promising new plot.xts function.  Michael Weylandt, the project&amp;rsquo;s student, wrote &lt;a href=&#34;https://stat.ethz.ch/mailman/listinfo/r-sig-finance&#34;&gt;R-SIG-Finance&lt;/a&gt; to &lt;a href=&#34;http://draft.blogger.com/%20https://stat.ethz.ch/pipermail/r-sig-finance/2012q3/010652.html&#34;&gt;request impressions, feedback, and bug reports&lt;/a&gt;.  The function is housed in the &lt;a href=&#34;https://r-forge.r-project.org/scm/viewvc.php/pkg/xtsExtra/?root=xts&#34;&gt;xtsExtra&lt;/a&gt; package of the &lt;a href=&#34;https://r-forge.r-project.org/projects/xts&#34;&gt;xts project on R-Forge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please try &lt;code&gt;xtsExtra::plot.xts&lt;/code&gt; and let us know what you think.  A sample of the eye-candy produced by the code in &lt;a href=&#34;https://stat.ethz.ch/pipermail/r-sig-finance/2012q3/010652.html&#34;&gt;Michael&amp;rsquo;s email&lt;/a&gt; is below.  Granted, this isn&amp;rsquo;t a one-liner, but it&amp;rsquo;s certainly impressive!  Great work Michael!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.fosstrading.com/post-images/edhec.jpeg&#34; alt=&#34;&#34; &gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Packages featured with Inference for R</title>
      <link>https://blog.fosstrading.com/2009/05/packages-featured-with-inference-for-r/</link>
      <pubDate>Tue, 12 May 2009 09:22:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/05/packages-featured-with-inference-for-r/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://r-forge.r-project.org/projects/quantmod/&#34;&gt;quantmod&lt;/a&gt;, &lt;a href=&#34;http://r-forge.r-project.org/projects/ttr/&#34;&gt;TTR&lt;/a&gt;, and &lt;a href=&#34;http://r-forge.r-project.org/projects/xts/&#34;&gt;xts&lt;/a&gt; were (not so) recently featured on the &lt;a href=&#34;http://inferenceforr.com/blog/default.aspx&#34;&gt;Inference for R Blog&lt;/a&gt;. &lt;a href=&#34;http://inferenceforr.com/default.aspx&#34;&gt;Inference for R&lt;/a&gt; is a Integrated Development Environment (IDE) designed specifically for &lt;a href=&#34;http://www.r-project.org/&#34;&gt;R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://inferenceforr.com/blog/Lists/Posts/Post.aspx?ID=17&#34;&gt;The post&lt;/a&gt; gives an example of how to easily perform advanced financial stock analysis using Inference in Excel.&lt;/p&gt;
&lt;p&gt;I appreciate how they&amp;rsquo;re making &lt;a href=&#34;http://www.r-project.org/&#34;&gt;R&lt;/a&gt; more accessible to a general audience, even though I like a command line interface and my preferred development environment is &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt;. :-)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
