<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Releases on FOSS Trading</title>
    <link>https://blog.fosstrading.com/tags/releases/</link>
    <description>Recent content in Releases on FOSS Trading</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Mar 2020 07:23:00 -0500</lastBuildDate>
    
	<atom:link href="https://blog.fosstrading.com/tags/releases/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>quantmod_0.4-16 on CRAN</title>
      <link>https://blog.fosstrading.com/2020/03/quantmod04-16-on-cran/</link>
      <pubDate>Tue, 10 Mar 2020 07:23:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2020/03/quantmod04-16-on-cran/</guid>
      <description>A new version of quantmod is on CRAN! One really cool thing about this release is that almost all the changes are contributions from the community.
Ethan Smith made more excellent contributions to getQuote() in this release. It no longer throws an error if one or more symbols are missing. And it handles multiple symbols in a semicolon-delimted string, just like getSymbols(). For example, you can get quotes for multiple symbols by calling getQuote(&amp;quot;SPY;AAPL&amp;quot;).</description>
    </item>
    
    <item>
      <title>microbenchmark_1.4-7 on CRAN</title>
      <link>https://blog.fosstrading.com/2019/10/microbenchmark14-7-on-cran/</link>
      <pubDate>Thu, 10 Oct 2019 06:21:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2019/10/microbenchmark14-7-on-cran/</guid>
      <description>I pushed an updated microbenchmark to CRAN a couple weeks ago. There were two noteworthy changes, thanks to great contributions from @MichaelChirico and @harvey131.
Michael fixed a bug in the check for whether the unit argument was a character string (#9, #10). The prior behavior was an uninformative error.
Harvey added a feature to allow you to use a string for common checks: &amp;ldquo;equal&amp;rdquo;, &amp;ldquo;identical&amp;rdquo;, and &amp;ldquo;equivalent&amp;rdquo; (#16). So you don&amp;rsquo;t need to create a custom function to use all.</description>
    </item>
    
    <item>
      <title>quantmod_0.4-14 on CRAN</title>
      <link>https://blog.fosstrading.com/2019/03/quantmod04-14-on-cran/</link>
      <pubDate>Mon, 25 Mar 2019 06:53:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2019/03/quantmod04-14-on-cran/</guid>
      <description>I just pushed a new release of quantmod to CRAN! I&amp;rsquo;m most excited about the update to getSymbols() so it doesn&amp;rsquo;t throw an error and stop processing if there&amp;rsquo;s a problem with one ticker symbol. Now getSymbols() will import all the data it can, and provide an informative error message for any ticker symbols it could not import.
Another cool feature is that getQuote() can now import quotes from Tiingo. But don&amp;rsquo;t thank me; thank Ethan Smith for the feature request [#247] and pull request [#250].</description>
    </item>
    
    <item>
      <title>xts 0.11-2 on CRAN</title>
      <link>https://blog.fosstrading.com/2018/11/xts-011-2-on-cran/</link>
      <pubDate>Tue, 06 Nov 2018 06:35:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/11/xts-011-2-on-cran/</guid>
      <description>xts version 0.11-2 was published to CRAN yesterday. xts provides data structure and functions to work with time-indexed data. This is a bug-fix release, with notable changes below:
 The xts method for shift.time() is now registered. Thanks to Philippe Verspeelt for the report and PR (#268, #273). An if-statement in the xts constructor will no longer try to use a logical vector with length &amp;gt; 1. Code like if (c(TRUE, TRUE)) will throw a warning in an upcoming R release, and this patch will prevent that warning.</description>
    </item>
    
    <item>
      <title>xts 0.11-1 on CRAN</title>
      <link>https://blog.fosstrading.com/2018/09/xts-011-1-on-cran/</link>
      <pubDate>Wed, 12 Sep 2018 13:36:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/09/xts-011-1-on-cran/</guid>
      <description>xts version 0.11-1 was published to CRAN this morning. xts provides data structure and functions to work with time-indexed data. This release contains some awesome features that will transparently make your xts code even faster!
 There&amp;rsquo;s a new window.xts() method, thanks to Corwin Joy (#100, #240). Corwin also refactored and improved the performance of the binary search algorithm used to subset xts objects. Tom Andrews reported and fixed a few related regressions (#251, #263, #264).</description>
    </item>
    
    <item>
      <title>Goodbye Google, Hello Tiingo!</title>
      <link>https://blog.fosstrading.com/2018/04/goodbye-google-hello-tiingo/</link>
      <pubDate>Fri, 13 Apr 2018 11:14:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/04/goodbye-google-hello-tiingo/</guid>
      <description>First, the bad news:
Google Finance no longer provides data for historical prices or financial statements, so we say goodbye to getSymbols.google() and getFinancials.google(). (#221) They are now defunct as of quantmod 0.4-13.
Now, the good news:
Thanks to Steve Bronder, getSymbols() can now import data from Tiingo! (#220) This feature is part of quantmod 0.4-13, which is now on CRAN. Windows and Mac binaries should be built in a day or two.</description>
    </item>
    
    <item>
      <title>xts 0.10-2 on CRAN</title>
      <link>https://blog.fosstrading.com/2018/03/xts-010-2-on-cran/</link>
      <pubDate>Mon, 19 Mar 2018 05:30:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/03/xts-010-2-on-cran/</guid>
      <description>This xts release contains mostly bugfixes, but there are a few noteworthy features. Some of these features were added in version 0.10-1, but I forgot to blog about it. Anyway, in no particular order:
 endpoints() gained sub-second accuracy on Windows (#202)! na.locf.xts() now honors x and xout arguments by dispatching to the next method (#215). Thanks to Morten Grum for the report. na.locf.xts() and na.omit.xts() now support character xts objects.</description>
    </item>
    
    <item>
      <title>RQuantLib 0.4.4 for Windows</title>
      <link>https://blog.fosstrading.com/2018/01/rquantlib-044-for-windows/</link>
      <pubDate>Fri, 05 Jan 2018 14:02:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2018/01/rquantlib-044-for-windows/</guid>
      <description>I&amp;rsquo;m pleased to announce that the RQuantLib Windows binaries are now up to 0.4.4! The RQuantLib pre-built Windows binaries have been frozen on CRAN since 0.4.2, but now you can get version 0.4.4 binaries on Dirk&amp;rsquo;s ghrr drat repo.
Installation is as simple as:
drat::addRepo(&amp;#34;ghrr&amp;#34;) # maybe use &amp;#39;install.packages(&amp;#34;drat&amp;#34;)&amp;#39; first  install.packages(&amp;#34;RQuantLib&amp;#34;, type=&amp;#34;binary&amp;#34;) I will be able to create Windows binaries for future RQuantLib versions too, now that I have a Windows QuantLib build (version 1.</description>
    </item>
    
    <item>
      <title>getSymbols and Alpha Vantage</title>
      <link>https://blog.fosstrading.com/2017/10/getsymbols-and-alpha-vantage/</link>
      <pubDate>Fri, 06 Oct 2017 16:12:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2017/10/getsymbols-and-alpha-vantage/</guid>
      <description>Thanks to Paul Teetor, getSymbols() can now import data from Alpha Vantage! This feature is part of the quantmod 0.4-11 release, and provides another another data source to avoid any Yahoo Finance API changes*.
Alpha Vantage is a free web service that provides real-time and historical equity data. They provide daily, weekly, and monthly history for both domestic and international markets, with up to 20 years of history. Dividend and split adjusted close prices are available for daily data.</description>
    </item>
    
    <item>
      <title>xts 0.10-0 on CRAN!</title>
      <link>https://blog.fosstrading.com/2017/07/xts-0-10-0-on-cran/</link>
      <pubDate>Fri, 07 Jul 2017 14:10:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2017/07/xts-0-10-0-on-cran/</guid>
      <description>A new, and long overdue, release of xts is now on CRAN! The major change is the completely new plot.xts() written by Michael Weylandt and Ross Bennett, and which is based on Jeff Ryan&amp;rsquo;s quantmod::chart_Series() code.
Do note that the new plot.xts() includes breaking changes to the original (and rather limited) plot.xts(). However, we believe the new functionality more than compensates for the potential one-time inconvenience. And I will no longer have to tell people that I use plot.</description>
    </item>
    
    <item>
      <title>quantmod 0.4-9 on CRAN</title>
      <link>https://blog.fosstrading.com/2017/06/quantmod-0-4-9-on-cran/</link>
      <pubDate>Wed, 07 Jun 2017 12:25:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2017/06/quantmod-0-4-9-on-cran/</guid>
      <description>A new release of quantmod is now on CRAN! The only change was to address changes to Yahoo! Finance and their effects on getSymbols.yahoo(). GitHub issue #157 contains some details about the fix implementation.
Unfortunately, the URL wasn&amp;rsquo;t the only thing that changed. The actual data available for download changed as well.
The most noticeable difference is that the adjusted close column is no longer dividend-adjusted (i.e. it&amp;rsquo;s only split-adjusted). Also, only the close price is unadjusted; the open, high, and low are split-adjusted.</description>
    </item>
    
    <item>
      <title>quantmod 0.4-8 on CRAN</title>
      <link>https://blog.fosstrading.com/2017/04/quantmod-0-4-8-on-cran/</link>
      <pubDate>Wed, 19 Apr 2017 10:45:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2017/04/quantmod-0-4-8-on-cran/</guid>
      <description>I pushed a bug-fix release of quantmod to CRAN last night. The major changes were to
 getSymbols.FRED() (#141) getSymbols.oanda() (#144) getSymbols.yahoo() (#149)  All three providers made breaking changes to their URLs/interfaces.
getSymbols.google() also got some love. It now honors all arguments set via setSymbolLookup() (#138), and it correctly parses the date column in non-English locales (#140).
There&amp;rsquo;s a handy new argument to getDividends(): split.adjust. It allows you to request dividends unadjusted for splits (#128).</description>
    </item>
    
    <item>
      <title>quantmod 0.4-6 on CRAN</title>
      <link>https://blog.fosstrading.com/2016/08/quantmod-0-4-6-on-cran/</link>
      <pubDate>Mon, 29 Aug 2016 11:38:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2016/08/quantmod-0-4-6-on-cran/</guid>
      <description>CRAN just accepted a bugfix release of quantmod. The most pertinent changes were to fix getSymbols.oanda (#36) and getOptionChain.yahoo (#92). It also includes a fix to addTRIX (#72).
Oanda changed their URL format from http to https, and getSymbols.oanda did not follow the redirect. Yahoo Finance changed the HTML for displaying options data, which broke getOptionChain.yahoo. The fix downloads JSON instead of scraping HTML, so hopefully it will be less likely to break.</description>
    </item>
    
    <item>
      <title>New quantmod and TTR on CRAN</title>
      <link>https://blog.fosstrading.com/2015/07/new-quantmod-and-ttr-on-cran/</link>
      <pubDate>Fri, 24 Jul 2015 16:04:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2015/07/new-quantmod-and-ttr-on-cran/</guid>
      <description>I just sent quantmod_0.4-5 to CRAN, and TTR_0.23-0 has been there for a couple weeks. I&amp;rsquo;d like to thank Ivan Popivanov for many useful reports and patches to TTR. He provided patches to add HMA (Hull MA), ALMA, and ultimateOscillator functions.
James Toll provided a patch to the volatility function that uses a zero mean (instead of the sample mean) in close-to-close volatility. The other big change is that moving average functions no longer return objects with column names based on the input object column names.</description>
    </item>
    
    <item>
      <title>plot.xts RFC</title>
      <link>https://blog.fosstrading.com/2015/04/plotxts-rfc/</link>
      <pubDate>Mon, 20 Apr 2015 12:45:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2015/04/plotxts-rfc/</guid>
      <description>We have been working on a new charting engine for xts::plot.xts for the past couple years. It started with Michael Weylandt&amp;rsquo;s work during the 2012 Google Summer of Code, and Ross Bennett took up the torch during the 2014 GSoC.
This new engine improves the functionality, modularity, and flexibility of plot.xtsby building off the framework Jeff Ryan began with q****uantmod::chart_Series. The modular framework allows users to plot an xts object and incrementally build custom charts by adding panels of new data (including transformations of the original xts object).</description>
    </item>
    
    <item>
      <title>Import Japanese equity data into R with quantmod 0.4-4</title>
      <link>https://blog.fosstrading.com/2015/03/import-japanese-equity-data-into-r/</link>
      <pubDate>Tue, 10 Mar 2015 12:09:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2015/03/import-japanese-equity-data-into-r/</guid>
      <description>I pushed quantmod 0.4-4 to CRAN this weekend. It adds a getSymbols.yahooj function to pull stock data from Yahoo Finance Japan, and fixes issues in getOptionChain.yahoo and getSymbols.oanda.
Changes to the Yahoo Finance and Oanda websites broke the getOptionChain.yahoo and getSymbols.oanda functions, respectively. I didn’t use getOptionChain.yahoo much, so I’m not certain I restored all the prior functionality. Let me know if there’s something I missed. I’d be glad to add a test case for that, or to add a test you’ve written.</description>
    </item>
    
    <item>
      <title>Updated quantmod on CRAN</title>
      <link>https://blog.fosstrading.com/2014/12/updated-quantmod-on-cran/</link>
      <pubDate>Mon, 15 Dec 2014 09:43:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2014/12/updated-quantmod-on-cran/</guid>
      <description>An updated version of quantmod has just been released on CRAN. This is my first submission as the new maintainer. The major change was removing the dependency on the now-archived Defaults package. End-users shouldn&amp;rsquo;t notice a difference, since I basically copied the necessary functionality from Defaults and added it to quantmod.
There are also several bug fixes. A few worth noting are:
 getSplits adjustOHLC getSymbols (when adjust=TRUE) saveSymbols newTA findValleys  </description>
    </item>
    
    <item>
      <title>TTR_0.22-0 on CRAN</title>
      <link>https://blog.fosstrading.com/2013/03/ttr022-0-on-cran/</link>
      <pubDate>Mon, 18 Mar 2013 20:49:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2013/03/ttr022-0-on-cran/</guid>
      <description>An updated version of TTR is now on CRAN. The biggest changes to be aware of are that all moving averages attempt to set colnames, CCI retuns an object with colnames, and the initial gap for SAR is not hard-coded at 0.01. There are also some much-needed bug fixes - most notably to Yang Zhang volatility, MACD, SAR, EMA/EVWMA, and adjRatios.
There are some exciting new features, including a rolling single-factor model function (rollSFM, based on a prototype from James Toll), a runPercentRank function from Charlie Friedemann, stoch and WPR return 0.</description>
    </item>
    
    <item>
      <title>DEoptim in Parallel</title>
      <link>https://blog.fosstrading.com/2012/03/deoptim-in-parallel-comments/</link>
      <pubDate>Sun, 04 Mar 2012 20:33:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2012/03/deoptim-in-parallel-comments/</guid>
      <description>This is great work by Josh. If anyone would like &amp;hellip; Unknown - Mar 2, 2012This is great work by Josh. If anyone would like to test this out before we send it to CRAN, see example code in the &amp;lsquo;sandbox&amp;rsquo; directory in the package source, also provided by Josh.
If you want to just see it working (though this won&amp;rsquo;t show any speed improvements), here is some minimal code. You will need the following packages installed: doSNOW, foreach, DEoptim (the version from R-forge, not CRAN).</description>
    </item>
    
    <item>
      <title>DEoptim in Parallel</title>
      <link>https://blog.fosstrading.com/2012/03/deoptim-in-parallel/</link>
      <pubDate>Sun, 04 Mar 2012 20:33:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2012/03/deoptim-in-parallel/</guid>
      <description>Running DEoptim in parallel has been on the development team&amp;rsquo;s wishlist for awhile. It had not been a priority though, because none of us have personally needed it. An opportunity arose when Kris Boudt approached me about collaborating to add this functionality as part of a consultancy project for a financial services firm.
We were able to add and test the functionality within a week. The latest revision of DEoptim on R-Forge has the capability to evaluate the objective function on multiple cores using foreach.</description>
    </item>
    
    <item>
      <title>TTR_0.21-0 on CRAN</title>
      <link>https://blog.fosstrading.com/2011/09/ttr021-0-on-cran/</link>
      <pubDate>Thu, 01 Sep 2011 13:10:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/09/ttr021-0-on-cran/</guid>
      <description>An updated version of TTR is now on CRAN. It contains some much-needed bug fixes (most notably to stockSymbols), some small changes, and a few new functions. Note that the change to wilderSum will affect functions that use it (e.g. ADX).
Here are the full contents of the CHANGES file:
TTR version 0.21-0
Changes from version 0.20-2
NEW FEATURES:
 Added variable moving average function, VMA. Added Brian Peterson&amp;rsquo;s price bands function, PBands.</description>
    </item>
    
    <item>
      <title>RQuantLib Windows binary on CRAN</title>
      <link>https://blog.fosstrading.com/2011/04/rquantlib-windows-binary-on-cran/</link>
      <pubDate>Mon, 04 Apr 2011 11:47:00 -0500</pubDate>
      
      <guid>https://blog.fosstrading.com/2011/04/rquantlib-windows-binary-on-cran/</guid>
      <description>Dirk Eddelbuettel has recently released RQuantLib-0.3.7, which contains the necessary QuantLib builds to allow the CRAN servers to build the Windows binary.
This (thankfully) makes my post on how to build RQuantLib on 32-bit Windows unnecessary for casual users, but may be useful for those who want to develop RQuantLib on Windows.</description>
    </item>
    
    <item>
      <title>TTR_0.2 on CRAN</title>
      <link>https://blog.fosstrading.com/2009/02/ttr02-on-cran/</link>
      <pubDate>Sun, 15 Feb 2009 18:51:00 -0600</pubDate>
      
      <guid>https://blog.fosstrading.com/2009/02/ttr02-on-cran/</guid>
      <description>I am happy to announce a long-overdue update to the TTR package (version 0.2) is now on CRAN.
This update represents a major milestone, as TTR useRs are no longer restricted to using matrix objects. TTR 0.2 uses xts internally, so all major time series classes are now supported.
NEW FEATURES:
- Added the zig zag indicator: ZigZag()
- Added volatility estimators/indicators: volatility(), with the following calculations
- Close-to-Close
- Garman Klass</description>
    </item>
    
  </channel>
</rss>